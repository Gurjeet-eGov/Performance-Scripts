<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan">
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Login Variables">
        <collectionProp name="Arguments.arguments">
          <elementProp name="username" elementType="Argument">
            <stringProp name="Argument.name">username</stringProp>
            <stringProp name="Argument.value">EMP11</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="password" elementType="Argument">
            <stringProp name="Argument.name">password</stringProp>
            <stringProp name="Argument.value">eGov@123</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="state_tenant" elementType="Argument">
            <stringProp name="Argument.name">state_tenant</stringProp>
            <stringProp name="Argument.value">pb</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="userType" elementType="Argument">
            <stringProp name="Argument.name">userType</stringProp>
            <stringProp name="Argument.value">EMPLOYEE</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="URL" elementType="Argument">
            <stringProp name="Argument.name">URL</stringProp>
            <stringProp name="Argument.value">sdc-uat.lgpunjab.gov.in</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="city_tenant" elementType="Argument">
            <stringProp name="Argument.name">city_tenant</stringProp>
            <stringProp name="Argument.value">testing</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="authorization" elementType="Argument">
            <stringProp name="Argument.name">authorization</stringProp>
            <stringProp name="Argument.value">Basic ZWdvdi11c2VyLWNsaWVudDplZ292LXVzZXItc2VjcmV0</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <SetupThreadGroup guiclass="SetupThreadGroupGui" testclass="SetupThreadGroup" testname="setUp Thread Group">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </SetupThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/user/oauth/token (Setup)" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/user/oauth/token</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">password</stringProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="userType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">userType</stringProp>
                <stringProp name="Argument.value">${userType}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
                <stringProp name="Argument.value">${state_tenant}.${city_tenant}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
                <stringProp name="Argument.value">read</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://${URL}/employee/user/login</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://${URL}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">${authorization}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/112.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="authToken Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">authToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ReqInfo Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">ReqInfo</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.UserRequest</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">props.put(&quot;authToken&quot;, vars.get(&quot;authToken&quot;))
props.put(&quot;ReqInfo&quot;, vars.get(&quot;UserRequest&quot;))</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/filestore/v1/files" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/filestore/v1/files</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="/home/moolya/Documents/eGov/Performance-Scripts/mSeva/IMG.jpg" elementType="HTTPFileArg">
                <stringProp name="File.mimetype">image/jpeg</stringProp>
                <stringProp name="File.path">/home/moolya/Documents/eGov/Performance-Scripts/mSeva/IMG.jpg</stringProp>
                <stringProp name="File.paramname">file</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
                <stringProp name="Argument.value">${state_tenant}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="module" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">module</stringProp>
                <stringProp name="Argument.value">undefined</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://${URL}/employee/user/login</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://${URL}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/112.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="fileStoreId Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">fileStoreId</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.files[0].fileStoreId</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
            <boolProp name="displayJMeterProperties">false</boolProp>
            <boolProp name="displayJMeterVariables">true</boolProp>
            <boolProp name="displaySamplerProperties">true</boolProp>
            <boolProp name="displaySystemProperties">false</boolProp>
          </DebugPostProcessor>
          <hashTree/>
          <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="JSR223 PostProcessor" enabled="true">
            <stringProp name="cacheKey">true</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="parameters"></stringProp>
            <stringProp name="script">props.put(&quot;fileStoreId&quot;, vars.get(&quot;fileStoreId&quot;))</stringProp>
            <stringProp name="scriptLanguage">groovy</stringProp>
          </JSR223PostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group: Localization Service" enabled="false">
        <intProp name="ThreadGroup.num_threads">100</intProp>
        <intProp name="ThreadGroup.ramp_time">10</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">15</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="Localization CSV Config" enabled="true">
          <stringProp name="filename">/home/moolya/Documents/eGov/Performance-Scripts/mSeva/localization_modules.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">loc_module</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Localization Search" enabled="false">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${loc_module} (en_IN)" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/localization/messages/v1/_search?module=${loc_module}&amp;locale=en_IN&amp;tenantId=${state_tenant}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${loc_module} (pn_IN)" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/localization/messages/v1/_search?module=${loc_module}&amp;locale=pn_IN&amp;tenantId=${state_tenant}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="en_IN" enabled="false">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree/>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="pn_IN" enabled="false">
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${loc_module} (en_IN)" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/localization/messages/v1/_search?module=${loc_module}&amp;locale=en_IN&amp;tenantId=${state_tenant}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${loc_module} (pn_IN)" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/localization/messages/v1/_search?module=${loc_module}&amp;locale=pn_IN&amp;tenantId=${state_tenant}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group: User Service" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="User Login" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/user/oauth/token" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.port">443</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/user/oauth/token</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
              <collectionProp name="Arguments.arguments">
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">${username}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">${password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userType</stringProp>
                  <stringProp name="Argument.value">${userType}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tenantId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tenantId</stringProp>
                  <stringProp name="Argument.value">${state_tenant}.${city_tenant}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="scope" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">scope</stringProp>
                  <stringProp name="Argument.value">read</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${URL}/employee/user/login</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${URL}</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">${authorization}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate, br</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/112.0</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="authToken Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">authToken</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ReqInfo Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">ReqInfo</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.UserRequest</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="User Search" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/user/_search (username &amp; tenantId)" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/user/_search?tenantId=pb.testing</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${authToken}&quot;&#xd;
    },&#xd;
    &quot;userName&quot;: &quot;${username}&quot;,&#xd;
    &quot;tenantId&quot;: &quot;${state_tenant}.${city_tenant}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user_details Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_details</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="User Search &amp; Update" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/user/_search" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/user/_search?tenantId=pb.testing</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${authToken}&quot;&#xd;
    },&#xd;
    &quot;userName&quot;: &quot;${username}&quot;,&#xd;
    &quot;tenantId&quot;: &quot;${state_tenant}.${city_tenant}&quot;&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user_details Extractor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">user_details</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.user[0]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/user/profile/_update" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/user/profile/_update?tenantId=pb.testing</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${authToken}&quot;&#xd;
    },&#xd;
    &quot;user&quot;: ${user_details}&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="User Logout" enabled="true">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="User Login" enabled="true">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/user/oauth/token" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.port">443</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/user/oauth/token</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="username" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">username</stringProp>
                    <stringProp name="Argument.value">${username}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="password" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">password</stringProp>
                    <stringProp name="Argument.value">${password}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="userType" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">userType</stringProp>
                    <stringProp name="Argument.value">${userType}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="tenantId" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">tenantId</stringProp>
                    <stringProp name="Argument.value">${state_tenant}.${city_tenant}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="scope" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">scope</stringProp>
                    <stringProp name="Argument.value">read</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                  <elementProp name="grant_type" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.name">grant_type</stringProp>
                    <stringProp name="Argument.value">password</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                    <boolProp name="HTTPArgument.use_equals">true</boolProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="Sec-Fetch-Mode" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                    <stringProp name="Header.value">cors</stringProp>
                  </elementProp>
                  <elementProp name="Referer" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${URL}/employee/user/login</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Site" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                    <stringProp name="Header.value">same-origin</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Language" elementType="Header">
                    <stringProp name="Header.name">Accept-Language</stringProp>
                    <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
                  </elementProp>
                  <elementProp name="Origin" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${URL}</stringProp>
                  </elementProp>
                  <elementProp name="Accept" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="authorization" elementType="Header">
                    <stringProp name="Header.name">authorization</stringProp>
                    <stringProp name="Header.value">${authorization}</stringProp>
                  </elementProp>
                  <elementProp name="Content-Type" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                  </elementProp>
                  <elementProp name="Accept-Encoding" elementType="Header">
                    <stringProp name="Header.name">Accept-Encoding</stringProp>
                    <stringProp name="Header.value">gzip, deflate, br</stringProp>
                  </elementProp>
                  <elementProp name="User-Agent" elementType="Header">
                    <stringProp name="Header.name">User-Agent</stringProp>
                    <stringProp name="Header.value">Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/112.0</stringProp>
                  </elementProp>
                  <elementProp name="Sec-Fetch-Dest" elementType="Header">
                    <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                    <stringProp name="Header.value">empty</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="authToken Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">authToken</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ReqInfo Extractor" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">ReqInfo</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.UserRequest</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="User Logout" enabled="true">
              <boolProp name="TransactionController.parent">true</boolProp>
              <boolProp name="TransactionController.includeTimers">false</boolProp>
            </TransactionController>
            <hashTree>
              <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/user/_logout" enabled="true">
                <stringProp name="HTTPSampler.domain">${URL}</stringProp>
                <stringProp name="HTTPSampler.protocol">https</stringProp>
                <stringProp name="HTTPSampler.path">/user/_logout?access_token=${authToken}&amp;tenantId=${state_tenant}.${city_tenant}</stringProp>
                <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
                <stringProp name="HTTPSampler.method">POST</stringProp>
                <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
                <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
                <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                  <collectionProp name="Arguments.arguments">
                    <elementProp name="" elementType="HTTPArgument">
                      <boolProp name="HTTPArgument.always_encode">false</boolProp>
                      <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_logout&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${authToken}&quot;&#xd;
    }&#xd;
}</stringProp>
                      <stringProp name="Argument.metadata">=</stringProp>
                    </elementProp>
                  </collectionProp>
                </elementProp>
              </HTTPSamplerProxy>
              <hashTree>
                <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                  <collectionProp name="HeaderManager.headers">
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">accept</stringProp>
                      <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                    </elementProp>
                    <elementProp name="" elementType="Header">
                      <stringProp name="Header.name">content-type</stringProp>
                      <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                    </elementProp>
                  </collectionProp>
                </HeaderManager>
                <hashTree/>
              </hashTree>
            </hashTree>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/user/oauth/token" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.port">443</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/user/oauth/token</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">false</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">username</stringProp>
                <stringProp name="Argument.value">${username}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">password</stringProp>
                <stringProp name="Argument.value">${password}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="userType" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">userType</stringProp>
                <stringProp name="Argument.value">${userType}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="tenantId" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">tenantId</stringProp>
                <stringProp name="Argument.value">${state_tenant}.${city_tenant}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="scope" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">scope</stringProp>
                <stringProp name="Argument.value">read</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
              <elementProp name="grant_type" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.name">grant_type</stringProp>
                <stringProp name="Argument.value">password</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="Sec-Fetch-Mode" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                <stringProp name="Header.value">cors</stringProp>
              </elementProp>
              <elementProp name="Referer" elementType="Header">
                <stringProp name="Header.name">Referer</stringProp>
                <stringProp name="Header.value">https://${URL}/employee/user/login</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Site" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                <stringProp name="Header.value">same-origin</stringProp>
              </elementProp>
              <elementProp name="Accept-Language" elementType="Header">
                <stringProp name="Header.name">Accept-Language</stringProp>
                <stringProp name="Header.value">en-US,en;q=0.5</stringProp>
              </elementProp>
              <elementProp name="Origin" elementType="Header">
                <stringProp name="Header.name">Origin</stringProp>
                <stringProp name="Header.value">https://${URL}</stringProp>
              </elementProp>
              <elementProp name="Accept" elementType="Header">
                <stringProp name="Header.name">Accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="authorization" elementType="Header">
                <stringProp name="Header.name">authorization</stringProp>
                <stringProp name="Header.value">${authorization}</stringProp>
              </elementProp>
              <elementProp name="Content-Type" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
              </elementProp>
              <elementProp name="Accept-Encoding" elementType="Header">
                <stringProp name="Header.name">Accept-Encoding</stringProp>
                <stringProp name="Header.value">gzip, deflate, br</stringProp>
              </elementProp>
              <elementProp name="User-Agent" elementType="Header">
                <stringProp name="Header.name">User-Agent</stringProp>
                <stringProp name="Header.value">Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/112.0</stringProp>
              </elementProp>
              <elementProp name="Sec-Fetch-Dest" elementType="Header">
                <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                <stringProp name="Header.value">empty</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="authToken Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">authToken</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.access_token</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="ReqInfo Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">ReqInfo</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.UserRequest</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/user/_search (username &amp; tenantId)" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/user/_search?tenantId=pb.testing</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${authToken}&quot;&#xd;
    },&#xd;
    &quot;userName&quot;: &quot;${username}&quot;,&#xd;
    &quot;tenantId&quot;: &quot;${state_tenant}.${city_tenant}&quot;&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="user_details Extractor" enabled="true">
            <stringProp name="JSONPostProcessor.referenceNames">user_details</stringProp>
            <stringProp name="JSONPostProcessor.jsonPathExprs">$.user[0]</stringProp>
            <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
            <stringProp name="JSONPostProcessor.defaultValues">NOT_FOUND</stringProp>
          </JSONPostProcessor>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/user/profile/_update" enabled="false">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/user/profile/_update?tenantId=pb.testing</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${authToken}&quot;&#xd;
    },&#xd;
    &quot;user&quot;: ${user_details}&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/user/_logout" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/user/_logout?access_token=${authToken}&amp;tenantId=${state_tenant}.${city_tenant}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_logout&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${authToken}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group: egov-mdms" enabled="false">
        <intProp name="ThreadGroup.num_threads">100</intProp>
        <intProp name="ThreadGroup.ramp_time">10</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">7</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV Data Set Config" enabled="true">
          <stringProp name="filename">/home/moolya/Documents/eGov/Performance-Scripts/mSeva/egov-mdms.csv</stringProp>
          <stringProp name="fileEncoding">UTF-8</stringProp>
          <stringProp name="variableNames">module_code,master_code</stringProp>
          <boolProp name="ignoreFirstLine">true</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">true</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="${module_code}.${master_code}" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/egov-mdms-service/v1/_search?tenantId=${state_tenant}.${city_tenant}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    },&#xd;
    &quot;MdmsCriteria&quot;: {&#xd;
        &quot;tenantId&quot;: &quot;${state_tenant}&quot;,&#xd;
        &quot;moduleDetails&quot;: [&#xd;
            {&#xd;
                &quot;moduleName&quot;: &quot;${module_code}&quot;,&#xd;
                &quot;masterDetails&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;${master_code}&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="MDMS Search" enabled="false">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="MDMS State tenant search" enabled="true">
            <boolProp name="TransactionController.parent">true</boolProp>
            <boolProp name="TransactionController.includeTimers">false</boolProp>
          </TransactionController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="common-masters.uiCommonConstants" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/egov-mdms-service/v1/_search?tenantId=${state_tenant}.${city_tenant}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    },&#xd;
    &quot;MdmsCriteria&quot;: {&#xd;
        &quot;tenantId&quot;: &quot;${state_tenant}&quot;,&#xd;
        &quot;moduleDetails&quot;: [&#xd;
            {&#xd;
                &quot;moduleName&quot;: &quot;common-masters&quot;,&#xd;
                &quot;masterDetails&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;uiCommonConstants&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="RAINMAKER-PGR.ServiceDefs" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/egov-mdms-service/v1/_search?tenantId=${state_tenant}.${city_tenant}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    },&#xd;
    &quot;MdmsCriteria&quot;: {&#xd;
        &quot;tenantId&quot;: &quot;${state_tenant}&quot;,&#xd;
        &quot;moduleDetails&quot;: [&#xd;
            {&#xd;
                &quot;moduleName&quot;: &quot;RAINMAKER-PGR&quot;,&#xd;
                &quot;masterDetails&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;ServiceDefs&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="common-masters.wfSlaConfig" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/egov-mdms-service/v1/_search?tenantId=${state_tenant}.${city_tenant}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    },&#xd;
    &quot;MdmsCriteria&quot;: {&#xd;
        &quot;tenantId&quot;: &quot;${state_tenant}&quot;,&#xd;
        &quot;moduleDetails&quot;: [&#xd;
            {&#xd;
                &quot;moduleName&quot;: &quot;common-masters&quot;,&#xd;
                &quot;masterDetails&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;wfSlaConfig&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="common-masters.TablePaginationOptions" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/egov-mdms-service/v1/_search?tenantId=${state_tenant}.${city_tenant}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    },&#xd;
    &quot;MdmsCriteria&quot;: {&#xd;
        &quot;tenantId&quot;: &quot;${state_tenant}&quot;,&#xd;
        &quot;moduleDetails&quot;: [&#xd;
            {&#xd;
                &quot;moduleName&quot;: &quot;common-masters&quot;,&#xd;
                &quot;masterDetails&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;TablePaginationOptions&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PropertyTax.Documents" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/egov-mdms-service/v1/_search?tenantId=${state_tenant}.${city_tenant}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    },&#xd;
    &quot;MdmsCriteria&quot;: {&#xd;
        &quot;tenantId&quot;: &quot;${state_tenant}&quot;,&#xd;
        &quot;moduleDetails&quot;: [&#xd;
            {&#xd;
                &quot;moduleName&quot;: &quot;PropertyTax&quot;,&#xd;
                &quot;masterDetails&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;Documents&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="tenant.tenants" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/egov-mdms-service/v1/_search?tenantId=${state_tenant}.${city_tenant}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    },&#xd;
    &quot;MdmsCriteria&quot;: {&#xd;
        &quot;tenantId&quot;: &quot;${state_tenant}&quot;,&#xd;
        &quot;moduleDetails&quot;: [&#xd;
            {&#xd;
                &quot;moduleName&quot;: &quot;tenant&quot;,&#xd;
                &quot;masterDetails&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;tenants&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="tenant.citymodule" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/egov-mdms-service/v1/_search?tenantId=${state_tenant}.${city_tenant}</stringProp>
              <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    },&#xd;
    &quot;MdmsCriteria&quot;: {&#xd;
        &quot;tenantId&quot;: &quot;${state_tenant}&quot;,&#xd;
        &quot;moduleDetails&quot;: [&#xd;
            {&#xd;
                &quot;moduleName&quot;: &quot;tenant&quot;,&#xd;
                &quot;masterDetails&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;citymodule&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">content-type</stringProp>
                    <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group: Access Control" enabled="false">
        <intProp name="ThreadGroup.num_threads">100</intProp>
        <intProp name="ThreadGroup.ramp_time">10</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="AccessV1 Search" enabled="false">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/access/v1/actions/mdms/_get" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/access/v1/actions/mdms/_get?tenantId=${state_tenant}.${city_tenant}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;RequestInfo&quot;: {&#xd;
    &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
    &quot;ver&quot;: &quot;.01&quot;,&#xd;
    &quot;ts&quot;: 1757582726639,&#xd;
    &quot;action&quot;: &quot;_get&quot;,&#xd;
    &quot;did&quot;: &quot;1&quot;,&#xd;
    &quot;key&quot;: &quot;&quot;,&#xd;
    &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
    &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
  },&#xd;
  &quot;roleCodes&quot;: [&#xd;
    &quot;WS_CEMP&quot;,&#xd;
    &quot;MISC_REC_CANCEL&quot;,&#xd;
    &quot;CEMP&quot;,&#xd;
    &quot;SEARCH_CATEGORY&quot;,&#xd;
    &quot;TL_FIELD_INSPECTOR&quot;,&#xd;
    &quot;TVCEMPLOYEE&quot;,&#xd;
    &quot;NOC_CEMP&quot;,&#xd;
    &quot;TL_DOC_VERIFIER&quot;,&#xd;
    &quot;PTCEMP&quot;,&#xd;
    &quot;SW_CLERK&quot;,&#xd;
    &quot;NDCADMIN&quot;,&#xd;
    &quot;INSPECTIONOFFICER&quot;,&#xd;
    &quot;VIEW_PAYMENT_CARD&quot;,&#xd;
    &quot;VIEW_BPAAPPLY_CARD&quot;,&#xd;
    &quot;WS_FIELD_INSPECTOR&quot;,&#xd;
    &quot;VIEW_PT_CARD&quot;,&#xd;
    &quot;PET_REG_EMPLOYEE&quot;,&#xd;
    &quot;Asset_ADMIN&quot;,&#xd;
    &quot;ASSET_APPROVER&quot;,&#xd;
    &quot;VIEW_COMMONPT_CARD&quot;,&#xd;
    &quot;VIEW_ADS_CARD&quot;,&#xd;
    &quot;NDC_ADMIN_ROLE&quot;,&#xd;
    &quot;SV_ADMIN&quot;,&#xd;
    &quot;SW_APPROVER&quot;,&#xd;
    &quot;TL_PUBLIC_SEARCH&quot;,&#xd;
    &quot;CREATE_CATEGORY&quot;,&#xd;
    &quot;VIEW_CHB_CARD&quot;,&#xd;
    &quot;TL_REC_CANCEL&quot;,&#xd;
    &quot;ADV_EMPLOYEE&quot;,&#xd;
    &quot;ATP_APPROVER&quot;,&#xd;
    &quot;TL_CEMP&quot;,&#xd;
    &quot;EMPLOYEE&quot;,&#xd;
    &quot;PET_DOC_APPROVER&quot;,&#xd;
    &quot;WS_CLERK&quot;,&#xd;
    &quot;VIEW_SWACH.WHATSAPP_CARD&quot;,&#xd;
    &quot;SUPERUSER&quot;,&#xd;
    &quot;GRO&quot;,&#xd;
    &quot;ASSET_REPORT_VIEWER&quot;,&#xd;
    &quot;NOC_DOC_VERIFIER&quot;,&#xd;
    &quot;VIEW_CHALLANGENERATION_CARD&quot;,&#xd;
    &quot;SWACH_STATE_EMP&quot;,&#xd;
    &quot;SWACH_ADMIN&quot;,&#xd;
    &quot;DGRO&quot;,&#xd;
    &quot;SW_DOC_VERIFIER&quot;,&#xd;
    &quot;ADS_ADMIN&quot;,&#xd;
    &quot;CATEGORY_ADMIN&quot;,&#xd;
    &quot;WS_APPROVER&quot;,&#xd;
    &quot;VIEW_NDC_CARD&quot;,&#xd;
    &quot;VIEW_ENGAGEMENT_CARD&quot;,&#xd;
    &quot;VIEW_PGR.WHATSAPP_CARD&quot;,&#xd;
    &quot;VIEW_TL_CARD&quot;,&#xd;
    &quot;CSR&quot;,&#xd;
    &quot;SEARCH_QUESTION&quot;,&#xd;
    &quot;SURVEY_ADMIN&quot;,&#xd;
    &quot;VIEW_SV_CARD&quot;,&#xd;
    &quot;ASSET_ALLOCATOR&quot;,&#xd;
    &quot;BPAREG_DOC_VERIFIER&quot;,&#xd;
    &quot;VIEW_RENTANDLEASE_CARD&quot;,&#xd;
    &quot;PET_DOC_VERIFIER&quot;,&#xd;
    &quot;PGR-ADMIN&quot;,&#xd;
    &quot;VIEW_MCOLLECT_CARD&quot;,&#xd;
    &quot;WS_REC_CANCEL&quot;,&#xd;
    &quot;WS_DOC_VERIFIER&quot;,&#xd;
    &quot;VIEW_WS_CARD&quot;,&#xd;
    &quot;CREATE_QUESTION&quot;,&#xd;
    &quot;SVCEMP&quot;,&#xd;
    &quot;ASSET_VERIFIER&quot;,&#xd;
    &quot;VIEW_BPA_STAKEHOLDER_CARD&quot;,&#xd;
    &quot;PT_REC_CANCEL&quot;,&#xd;
    &quot;VIEW_GC_CARD&quot;,&#xd;
    &quot;SEARCH_SURVEY&quot;,&#xd;
    &quot;VIEW_SW_CARD&quot;,&#xd;
    &quot;BPAREG_APPROVER&quot;,&#xd;
    &quot;VIEW_PGR_CARD&quot;,&#xd;
    &quot;VIEW_HRMS_CARD&quot;,&#xd;
    &quot;NOC_APPROVER&quot;,&#xd;
    &quot;NDC_ADMIN&quot;,&#xd;
    &quot;VIEW_BR_CARD&quot;,&#xd;
    &quot;UC_EMP&quot;,&#xd;
    &quot;VIEW_BPAREG_CARD&quot;,&#xd;
    &quot;ADV_APPROVER&quot;,&#xd;
    &quot;PT_APPROVER&quot;,&#xd;
    &quot;FIRENOC_REC_CANCEL&quot;,&#xd;
    &quot;VIEW_UC_CARD&quot;,&#xd;
    &quot;VIEW_NOC_CARD&quot;,&#xd;
    &quot;UPDATE_CATEGORY&quot;,&#xd;
    &quot;STADMIN&quot;,&#xd;
    &quot;NOC_FIELD_INSPECTOR&quot;,&#xd;
    &quot;UPDATE_QUESTION&quot;,&#xd;
    &quot;PTR_ADMIN&quot;,&#xd;
    &quot;TL_CEMP_FORLEGACY&quot;,&#xd;
    &quot;GC_ADMIN&quot;,&#xd;
    &quot;VIEW_ASSET_CARD&quot;,&#xd;
    &quot;ADV_VERIFIER&quot;,&#xd;
    &quot;SW_CEMP&quot;,&#xd;
    &quot;VIEW_SWACH_CARD&quot;,&#xd;
    &quot;TL_APPROVER&quot;,&#xd;
    &quot;SMS_SENDER&quot;,&#xd;
    &quot;HRMS_ADMIN&quot;,&#xd;
    &quot;VIEW_OBPS_CARD&quot;,&#xd;
    &quot;VIEW_FIRENOC_CARD&quot;,&#xd;
    &quot;ASSET_INITIATOR&quot;,&#xd;
    &quot;VIEW_PTR_CARD&quot;,&#xd;
    &quot;SW_FIELD_INSPECTOR&quot;&#xd;
  ],&#xd;
  &quot;tenantId&quot;: &quot;${state_tenant}&quot;,&#xd;
  &quot;actionMaster&quot;: &quot;actions-test&quot;,&#xd;
  &quot;enabled&quot;: true&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/access/v1/actions/mdms/_get" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/access/v1/actions/mdms/_get?tenantId=${state_tenant}.${city_tenant}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
  &quot;RequestInfo&quot;: {&#xd;
    &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
    &quot;ver&quot;: &quot;.01&quot;,&#xd;
    &quot;ts&quot;: 1757582726639,&#xd;
    &quot;action&quot;: &quot;_get&quot;,&#xd;
    &quot;did&quot;: &quot;1&quot;,&#xd;
    &quot;key&quot;: &quot;&quot;,&#xd;
    &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
    &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
  },&#xd;
  &quot;roleCodes&quot;: [&#xd;
    &quot;WS_CEMP&quot;,&#xd;
    &quot;MISC_REC_CANCEL&quot;,&#xd;
    &quot;CEMP&quot;,&#xd;
    &quot;SEARCH_CATEGORY&quot;,&#xd;
    &quot;TL_FIELD_INSPECTOR&quot;,&#xd;
    &quot;TVCEMPLOYEE&quot;,&#xd;
    &quot;NOC_CEMP&quot;,&#xd;
    &quot;TL_DOC_VERIFIER&quot;,&#xd;
    &quot;PTCEMP&quot;,&#xd;
    &quot;SW_CLERK&quot;,&#xd;
    &quot;NDCADMIN&quot;,&#xd;
    &quot;INSPECTIONOFFICER&quot;,&#xd;
    &quot;VIEW_PAYMENT_CARD&quot;,&#xd;
    &quot;VIEW_BPAAPPLY_CARD&quot;,&#xd;
    &quot;WS_FIELD_INSPECTOR&quot;,&#xd;
    &quot;VIEW_PT_CARD&quot;,&#xd;
    &quot;PET_REG_EMPLOYEE&quot;,&#xd;
    &quot;Asset_ADMIN&quot;,&#xd;
    &quot;ASSET_APPROVER&quot;,&#xd;
    &quot;VIEW_COMMONPT_CARD&quot;,&#xd;
    &quot;VIEW_ADS_CARD&quot;,&#xd;
    &quot;NDC_ADMIN_ROLE&quot;,&#xd;
    &quot;SV_ADMIN&quot;,&#xd;
    &quot;SW_APPROVER&quot;,&#xd;
    &quot;TL_PUBLIC_SEARCH&quot;,&#xd;
    &quot;CREATE_CATEGORY&quot;,&#xd;
    &quot;VIEW_CHB_CARD&quot;,&#xd;
    &quot;TL_REC_CANCEL&quot;,&#xd;
    &quot;ADV_EMPLOYEE&quot;,&#xd;
    &quot;ATP_APPROVER&quot;,&#xd;
    &quot;TL_CEMP&quot;,&#xd;
    &quot;EMPLOYEE&quot;,&#xd;
    &quot;PET_DOC_APPROVER&quot;,&#xd;
    &quot;WS_CLERK&quot;,&#xd;
    &quot;VIEW_SWACH.WHATSAPP_CARD&quot;,&#xd;
    &quot;SUPERUSER&quot;,&#xd;
    &quot;GRO&quot;,&#xd;
    &quot;ASSET_REPORT_VIEWER&quot;,&#xd;
    &quot;NOC_DOC_VERIFIER&quot;,&#xd;
    &quot;VIEW_CHALLANGENERATION_CARD&quot;,&#xd;
    &quot;SWACH_STATE_EMP&quot;,&#xd;
    &quot;SWACH_ADMIN&quot;,&#xd;
    &quot;DGRO&quot;,&#xd;
    &quot;SW_DOC_VERIFIER&quot;,&#xd;
    &quot;ADS_ADMIN&quot;,&#xd;
    &quot;CATEGORY_ADMIN&quot;,&#xd;
    &quot;WS_APPROVER&quot;,&#xd;
    &quot;VIEW_NDC_CARD&quot;,&#xd;
    &quot;VIEW_ENGAGEMENT_CARD&quot;,&#xd;
    &quot;VIEW_PGR.WHATSAPP_CARD&quot;,&#xd;
    &quot;VIEW_TL_CARD&quot;,&#xd;
    &quot;CSR&quot;,&#xd;
    &quot;SEARCH_QUESTION&quot;,&#xd;
    &quot;SURVEY_ADMIN&quot;,&#xd;
    &quot;VIEW_SV_CARD&quot;,&#xd;
    &quot;ASSET_ALLOCATOR&quot;,&#xd;
    &quot;BPAREG_DOC_VERIFIER&quot;,&#xd;
    &quot;VIEW_RENTANDLEASE_CARD&quot;,&#xd;
    &quot;PET_DOC_VERIFIER&quot;,&#xd;
    &quot;PGR-ADMIN&quot;,&#xd;
    &quot;VIEW_MCOLLECT_CARD&quot;,&#xd;
    &quot;WS_REC_CANCEL&quot;,&#xd;
    &quot;WS_DOC_VERIFIER&quot;,&#xd;
    &quot;VIEW_WS_CARD&quot;,&#xd;
    &quot;CREATE_QUESTION&quot;,&#xd;
    &quot;SVCEMP&quot;,&#xd;
    &quot;ASSET_VERIFIER&quot;,&#xd;
    &quot;VIEW_BPA_STAKEHOLDER_CARD&quot;,&#xd;
    &quot;PT_REC_CANCEL&quot;,&#xd;
    &quot;VIEW_GC_CARD&quot;,&#xd;
    &quot;SEARCH_SURVEY&quot;,&#xd;
    &quot;VIEW_SW_CARD&quot;,&#xd;
    &quot;BPAREG_APPROVER&quot;,&#xd;
    &quot;VIEW_PGR_CARD&quot;,&#xd;
    &quot;VIEW_HRMS_CARD&quot;,&#xd;
    &quot;NOC_APPROVER&quot;,&#xd;
    &quot;NDC_ADMIN&quot;,&#xd;
    &quot;VIEW_BR_CARD&quot;,&#xd;
    &quot;UC_EMP&quot;,&#xd;
    &quot;VIEW_BPAREG_CARD&quot;,&#xd;
    &quot;ADV_APPROVER&quot;,&#xd;
    &quot;PT_APPROVER&quot;,&#xd;
    &quot;FIRENOC_REC_CANCEL&quot;,&#xd;
    &quot;VIEW_UC_CARD&quot;,&#xd;
    &quot;VIEW_NOC_CARD&quot;,&#xd;
    &quot;UPDATE_CATEGORY&quot;,&#xd;
    &quot;STADMIN&quot;,&#xd;
    &quot;NOC_FIELD_INSPECTOR&quot;,&#xd;
    &quot;UPDATE_QUESTION&quot;,&#xd;
    &quot;PTR_ADMIN&quot;,&#xd;
    &quot;TL_CEMP_FORLEGACY&quot;,&#xd;
    &quot;GC_ADMIN&quot;,&#xd;
    &quot;VIEW_ASSET_CARD&quot;,&#xd;
    &quot;ADV_VERIFIER&quot;,&#xd;
    &quot;SW_CEMP&quot;,&#xd;
    &quot;VIEW_SWACH_CARD&quot;,&#xd;
    &quot;TL_APPROVER&quot;,&#xd;
    &quot;SMS_SENDER&quot;,&#xd;
    &quot;HRMS_ADMIN&quot;,&#xd;
    &quot;VIEW_OBPS_CARD&quot;,&#xd;
    &quot;VIEW_FIRENOC_CARD&quot;,&#xd;
    &quot;ASSET_INITIATOR&quot;,&#xd;
    &quot;VIEW_PTR_CARD&quot;,&#xd;
    &quot;SW_FIELD_INSPECTOR&quot;&#xd;
  ],&#xd;
  &quot;tenantId&quot;: &quot;${state_tenant}&quot;,&#xd;
  &quot;actionMaster&quot;: &quot;actions-test&quot;,&#xd;
  &quot;enabled&quot;: true&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group: egov-location" enabled="false">
        <intProp name="ThreadGroup.num_threads">100</intProp>
        <intProp name="ThreadGroup.ramp_time">10</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/egov-location/_search (REVENUE - Locality)" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&amp;boundaryType=Locality&amp;tenantId=${state_tenant}.${city_tenant}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="egov-location" enabled="false">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/egov-location/_search (REVENUE - Locality)" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&amp;boundaryType=Locality&amp;tenantId=${state_tenant}.${city_tenant}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group: property-services">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="PT Variables">
          <collectionProp name="Arguments.arguments">
            <elementProp name="mobileNumber" elementType="Argument">
              <stringProp name="Argument.name">mobileNumber</stringProp>
              <stringProp name="Argument.value">9876543210</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="yearConstruction" elementType="Argument">
              <stringProp name="Argument.name">yearConstruction</stringProp>
              <stringProp name="Argument.value">2014-15</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="businessName" elementType="Argument">
              <stringProp name="Argument.name">businessName</stringProp>
              <stringProp name="Argument.value">XYZ</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="businessService" elementType="Argument">
              <stringProp name="Argument.name">businessService</stringProp>
              <stringProp name="Argument.value">PT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Search Property" enabled="false">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="PT  Search Variables">
            <collectionProp name="Arguments.arguments">
              <elementProp name="locality" elementType="Argument">
                <stringProp name="Argument.name">locality</stringProp>
                <stringProp name="Argument.value">SC7</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="propertyIds" elementType="Argument">
                <stringProp name="Argument.name">propertyIds</stringProp>
                <stringProp name="Argument.value">PT873487</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="mobileNumber" elementType="Argument">
                <stringProp name="Argument.name">mobileNumber</stringProp>
                <stringProp name="Argument.value">9876543210</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="oldpropertyids" elementType="Argument">
                <stringProp name="Argument.name">oldpropertyids</stringProp>
                <stringProp name="Argument.value">OLDPT873487</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="surveyId" elementType="Argument">
                <stringProp name="Argument.name">surveyId</stringProp>
                <stringProp name="Argument.value">SID1387</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
              <elementProp name="acknowledgementIds" elementType="Argument">
                <stringProp name="Argument.name">acknowledgementIds</stringProp>
                <stringProp name="Argument.value">ACK123</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </Arguments>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PT Search (tenantId - locality)">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/property-services/property/_search?tenantId=${state_tenant}.${city_tenant}&amp;locality=${locality}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PT Search (tenantId - propertyIds)" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/property-services/property/_search?tenantId=${state_tenant}&amp;propertyIds=${propertyIds}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PT Search (tenantId - mobileNumber)" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/property-services/property/_search?tenantId=${state_tenant}&amp;mobileNumber=${mobileNumber}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PT Search (tenantId - oldpropertyids)" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/property-services/property/_search?tenantId=${state_tenant}&amp;oldpropertyids=${oldpropertyids}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PT Search (tenantId - name)" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/property-services/property/_search?tenantId=${state_tenant}&amp;name=${name}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PT Search (tenantId - surveyId)" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/property-services/property/_search?tenantId=${state_tenant}&amp;surveyId=${surveyId}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="PT Search (tenantId - acknowledgementIds)" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/property-services/property/_search?tenantId=${state_tenant}&amp;acknowledgementIds=${acknowledgementIds}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Create &amp; Search Property" enabled="false">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/egov-location/_search (REVENUE - Locality)" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&amp;boundaryType=Locality&amp;tenantId=${state_tenant}.${city_tenant}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="boundaries" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">boundaries</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.TenantBoundary[0].boundary[*] </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="boundaries parser" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import groovy.json.JsonSlurper

def json = new JsonSlurper().parseText(vars.get(&quot;boundaries&quot;))

// Store values into JMeter variables
vars.put(&quot;boundaryArea&quot;, json.area ?: &quot;&quot;)
vars.put(&quot;boundaryPincode&quot;, json.pincode ?: &quot;&quot;)
vars.put(&quot;boundaryCode&quot;, json.code ?: &quot;&quot;)
vars.put(&quot;boundaryName&quot;, json.name ?: &quot;&quot;)
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/property-services/property/_create">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/property-services/property/_create?tenantId=${state_tenant}.${city_tenant}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;Property&quot;: {&#xd;
    &quot;additionalDetails&quot;: {&#xd;
      &quot;yearConstruction&quot;: &quot;${yearConstruction}&quot;,&#xd;
      &quot;businessName&quot;: &quot;${businessName}&quot;&#xd;
    },&#xd;
    &quot;address&quot;: {&#xd;
      &quot;city&quot;: &quot;Testing&quot;,&#xd;
      &quot;doorNo&quot;: &quot;BD 123&quot;,&#xd;
      &quot;locality&quot;: {&#xd;
        &quot;code&quot;: &quot;${boundaryCode}&quot;,&#xd;
        &quot;area&quot;: &quot;${boundaryArea}&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;usageCategoryMinor&quot;: null,&#xd;
    &quot;units&quot;: [&#xd;
      {&#xd;
        &quot;floorNo&quot;: &quot;0&quot;,&#xd;
        &quot;occupancyType&quot;: &quot;${OccupancyType.code}&quot;,&#xd;
        &quot;constructionDetail&quot;: {&#xd;
          &quot;builtUpArea&quot;: 16.67&#xd;
        },&#xd;
        &quot;usageCategory&quot;: &quot;RESIDENTIAL&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;usageCategoryMajor&quot;: &quot;RESIDENTIAL&quot;,&#xd;
    &quot;landArea&quot;: &quot;200&quot;,&#xd;
    &quot;propertyType&quot;: &quot;${PropertyType.code}&quot;,&#xd;
    &quot;noOfFloors&quot;: 1,&#xd;
    &quot;ownershipCategory&quot;: &quot;INDIVIDUAL.SINGLEOWNER&quot;,&#xd;
    &quot;owners&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Dennis&quot;,&#xd;
        &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
        &quot;fatherOrHusbandName&quot;: &quot;Markus&quot;,&#xd;
        &quot;emailId&quot;: null,&#xd;
        &quot;ownerShipPercentage&quot;: &quot;100&quot;,&#xd;
        &quot;permanentAddress&quot;: &quot;BD 123, PB_TESTING_REVENUE_${boundaryCode}, ${city_tenant}&quot;,&#xd;
        &quot;relationship&quot;: &quot;Father&quot;,&#xd;
        &quot;ownerType&quot;: &quot;NONE&quot;,&#xd;
        &quot;gender&quot;: &quot;Male&quot;,&#xd;
        &quot;isCorrespondenceAddress&quot;: true&#xd;
      }&#xd;
    ],&#xd;
    &quot;source&quot;: &quot;MUNICIPAL_RECORDS&quot;,&#xd;
    &quot;channel&quot;: &quot;CFC_COUNTER&quot;,&#xd;
    &quot;documents&quot;: [&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.ADDRESSPROOF.ELECTRICITYBILL&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.IDENTITYPROOF.DRIVING&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.REGISTRATIONPROOF.COURTDECREE&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.USAGEPROOF.ELECTRICITYBILL&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.CONSTRUCTIONPROOF.BPACERTIFICATE&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;superBuiltUpArea&quot;: null,&#xd;
    &quot;usageCategory&quot;: &quot;RESIDENTIAL&quot;,&#xd;
    &quot;tenantId&quot;: &quot;${state_tenant}.${city_tenant}&quot;,&#xd;
    &quot;creationReason&quot;: &quot;CREATE&quot;&#xd;
  },&#xd;
  &quot;RequestInfo&quot;: {&#xd;
    &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
    &quot;authToken&quot;: &quot;${__P(authToken)}&quot;,&#xd;
    &quot;userInfo&quot;: ${__P(ReqInfo)},&#xd;
    &quot;msgId&quot;: &quot;1757668283442|en_IN&quot;,&#xd;
    &quot;plainAccessRequest&quot;: {}&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${URL}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="propertyId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">propertyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0].propertyId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">PropertyID NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="acknowldgementNumber" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">acknowldgementNumber</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0].acknowldgementNumber</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/property-services/property/_search" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/property-services/property/_search?tenantId=${state_tenant}.${city_tenant}&amp;propertyIds=${propertyId}&amp;_=1757669330429</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;,&#xd;
        &quot;userInfo&quot;: ${__P(ReqInfo)},&#xd;
        &quot;msgId&quot;: &quot;1757668283442|en_IN&quot;,&#xd;
        &quot;plainAccessRequest&quot;: {}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${URL}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="PropertyDetail" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">PropertyDetail</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">PropertyID NOT FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Create &amp; Update Property" enabled="false">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/egov-location/_search (REVENUE - Locality)" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&amp;boundaryType=Locality&amp;tenantId=${state_tenant}.${city_tenant}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="boundaries" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">boundaries</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.TenantBoundary[0].boundary[*] </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="boundaries parser" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import groovy.json.JsonSlurper

def json = new JsonSlurper().parseText(vars.get(&quot;boundaries&quot;))

// Store values into JMeter variables
vars.put(&quot;boundaryArea&quot;, json.area ?: &quot;&quot;)
vars.put(&quot;boundaryPincode&quot;, json.pincode ?: &quot;&quot;)
vars.put(&quot;boundaryCode&quot;, json.code ?: &quot;&quot;)
vars.put(&quot;boundaryName&quot;, json.name ?: &quot;&quot;)
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MDMS PropertyTax">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/egov-mdms-service/v1/_search?tenantId=${state_tenant}.${city_tenant}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    },&#xd;
    &quot;MdmsCriteria&quot;: {&#xd;
        &quot;tenantId&quot;: &quot;${state_tenant}&quot;,&#xd;
        &quot;moduleDetails&quot;: [&#xd;
            {&#xd;
                &quot;moduleName&quot;: &quot;PropertyTax&quot;,&#xd;
                &quot;masterDetails&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;OccupancyType&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;UsageCategory&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;UsageCategoryMajor&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;PropertyType&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;OwnerShipCategory&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="OccupancyType" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">OccupancyType</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.OccupancyType[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">OccupancyType NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="UsageCategory" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">UsageCategory</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.UsageCategory[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">UsageCategory NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="UsageCategoryMajor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">UsageCategoryMajor</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.UsageCategoryMajor[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">UsageCategoryMajor NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="PropertyType" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PropertyType</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.PropertyType[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">PropertyType NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="OwnerShipCategory" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">OwnerShipCategory</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.OwnerShipCategory[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">OwnerShipCategory NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="mdms parser" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import groovy.json.JsonSlurper

def OccupancyType = new JsonSlurper().parseText(vars.get(&quot;OccupancyType&quot;))
def UsageCategory = new JsonSlurper().parseText(vars.get(&quot;UsageCategory&quot;))
def UsageCategoryMajor = new JsonSlurper().parseText(vars.get(&quot;UsageCategoryMajor&quot;))
def PropertyType = new JsonSlurper().parseText(vars.get(&quot;PropertyType&quot;))
def OwnerShipCategory = new JsonSlurper().parseText(vars.get(&quot;OwnerShipCategory&quot;))

// Store values into JMeter variables
vars.put(&quot;OccupancyType.code&quot;, OccupancyType.code ?: &quot;&quot;)
vars.put(&quot;UsageCategory.code&quot;, UsageCategory.code ?: &quot;&quot;)
vars.put(&quot;UsageCategoryMajor.code&quot;, UsageCategoryMajor.code ?: &quot;&quot;)
vars.put(&quot;PropertyType.code&quot;, PropertyType.code ?: &quot;&quot;)
vars.put(&quot;OwnerShipCategory.code&quot;, OwnerShipCategory.code ?: &quot;&quot;)</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/property-services/property/_create">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/property-services/property/_create?tenantId=${state_tenant}.${city_tenant}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;Property&quot;: {&#xd;
    &quot;additionalDetails&quot;: {&#xd;
      &quot;yearConstruction&quot;: &quot;${yearConstruction}&quot;,&#xd;
      &quot;businessName&quot;: &quot;${businessName}&quot;&#xd;
    },&#xd;
    &quot;address&quot;: {&#xd;
      &quot;city&quot;: &quot;Testing&quot;,&#xd;
      &quot;doorNo&quot;: &quot;BD 123&quot;,&#xd;
      &quot;locality&quot;: {&#xd;
        &quot;code&quot;: &quot;${boundaryCode}&quot;,&#xd;
        &quot;area&quot;: &quot;${boundaryArea}&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;usageCategoryMinor&quot;: null,&#xd;
    &quot;units&quot;: [&#xd;
      {&#xd;
        &quot;floorNo&quot;: &quot;0&quot;,&#xd;
        &quot;occupancyType&quot;: &quot;${OccupancyType.code}&quot;,&#xd;
        &quot;constructionDetail&quot;: {&#xd;
          &quot;builtUpArea&quot;: 16.67&#xd;
        },&#xd;
        &quot;usageCategory&quot;: &quot;RESIDENTIAL&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;usageCategoryMajor&quot;: &quot;RESIDENTIAL&quot;,&#xd;
    &quot;landArea&quot;: &quot;200&quot;,&#xd;
    &quot;propertyType&quot;: &quot;${PropertyType.code}&quot;,&#xd;
    &quot;noOfFloors&quot;: 1,&#xd;
    &quot;ownershipCategory&quot;: &quot;INDIVIDUAL.SINGLEOWNER&quot;,&#xd;
    &quot;owners&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Dennis&quot;,&#xd;
        &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
        &quot;fatherOrHusbandName&quot;: &quot;Markus&quot;,&#xd;
        &quot;emailId&quot;: null,&#xd;
        &quot;ownerShipPercentage&quot;: &quot;100&quot;,&#xd;
        &quot;permanentAddress&quot;: &quot;BD 123, PB_TESTING_REVENUE_${boundaryCode}, ${city_tenant}&quot;,&#xd;
        &quot;relationship&quot;: &quot;Father&quot;,&#xd;
        &quot;ownerType&quot;: &quot;NONE&quot;,&#xd;
        &quot;gender&quot;: &quot;Male&quot;,&#xd;
        &quot;isCorrespondenceAddress&quot;: true&#xd;
      }&#xd;
    ],&#xd;
    &quot;source&quot;: &quot;MUNICIPAL_RECORDS&quot;,&#xd;
    &quot;channel&quot;: &quot;CFC_COUNTER&quot;,&#xd;
    &quot;documents&quot;: [&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.ADDRESSPROOF.ELECTRICITYBILL&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.IDENTITYPROOF.DRIVING&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.REGISTRATIONPROOF.COURTDECREE&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.USAGEPROOF.ELECTRICITYBILL&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.CONSTRUCTIONPROOF.BPACERTIFICATE&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;superBuiltUpArea&quot;: null,&#xd;
    &quot;usageCategory&quot;: &quot;RESIDENTIAL&quot;,&#xd;
    &quot;tenantId&quot;: &quot;${state_tenant}.${city_tenant}&quot;,&#xd;
    &quot;creationReason&quot;: &quot;CREATE&quot;&#xd;
  },&#xd;
  &quot;RequestInfo&quot;: {&#xd;
    &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
    &quot;authToken&quot;: &quot;${__P(authToken)}&quot;,&#xd;
    &quot;userInfo&quot;: ${__P(ReqInfo)},&#xd;
    &quot;msgId&quot;: &quot;1757668283442|en_IN&quot;,&#xd;
    &quot;plainAccessRequest&quot;: {}&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${URL}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="propertyId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">propertyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0].propertyId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">PropertyID NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="acknowldgementNumber" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">acknowldgementNumber</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0].acknowldgementNumber</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">20</stringProp>
          </ConstantTimer>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller" enabled="true">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/property-services/property/_search" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/property-services/property/_search?tenantId=${state_tenant}.${city_tenant}&amp;propertyIds=${propertyId}&amp;_=1757669330429</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;,&#xd;
        &quot;userInfo&quot;: ${__P(ReqInfo)},&#xd;
        &quot;msgId&quot;: &quot;1757668283442|en_IN&quot;,&#xd;
        &quot;plainAccessRequest&quot;: {}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${URL}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="PropertyDetail" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">PropertyDetail</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">PropertyID NOT FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/property-services/property/_update" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/property-services/property/_update</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;Property&quot;: ${modifiedPropertyPayload},&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;,&#xd;
        &quot;userInfo&quot;: ${__P(ReqInfo)},&#xd;
        &quot;msgId&quot;: &quot;1757668283442|en_IN&quot;,&#xd;
        &quot;plainAccessRequest&quot;: {}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${URL}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="propertyId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">propertyId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0].propertyId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">propertyId NOT FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">import groovy.json.JsonSlurper
import groovy.json.JsonOutput

// 1. Read the saved JSON string from JMeter variable
def originalJson = vars.get(&quot;PropertyDetail&quot;)

// 2. Parse JSON into an object so we can work with it
def parser = new JsonSlurper()
def obj = parser.parseText(originalJson)

// 3. Update only the workflow part
obj.workflow = [
    action: &quot;APPROVE&quot;,                // new action
    comment: &quot;Verified in JMeter&quot;,    // optional comment
    businessService: &quot;PT.CREATE&quot;,
    businessId: &quot;${acknowldgementNumber}&quot;,
    moduleName: &quot;PT&quot;,
    assignes: []                      // keep empty or put values
]

// 4. Convert back into JSON string
def newJson = JsonOutput.toJson(obj)

// 5. Save into a new JMeter variable
vars.put(&quot;modifiedPropertyPayload&quot;, newJson)
</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Create &amp; Assess Property">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/egov-location/_search (REVENUE - Locality)">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&amp;boundaryType=Locality&amp;tenantId=${state_tenant}.${city_tenant}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="boundaries">
              <stringProp name="JSONPostProcessor.referenceNames">boundaries</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.TenantBoundary[0].boundary[*] </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="boundaries parser" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import groovy.json.JsonSlurper

def json = new JsonSlurper().parseText(vars.get(&quot;boundaries&quot;))

// Store values into JMeter variables
vars.put(&quot;boundaryArea&quot;, json.area ?: &quot;&quot;)
vars.put(&quot;boundaryPincode&quot;, json.pincode ?: &quot;&quot;)
vars.put(&quot;boundaryCode&quot;, json.code ?: &quot;&quot;)
vars.put(&quot;boundaryName&quot;, json.name ?: &quot;&quot;)
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MDMS PropertyTax" enabled="true">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/egov-mdms-service/v1/_search?tenantId=${state_tenant}.${city_tenant}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    },&#xd;
    &quot;MdmsCriteria&quot;: {&#xd;
        &quot;tenantId&quot;: &quot;${state_tenant}&quot;,&#xd;
        &quot;moduleDetails&quot;: [&#xd;
            {&#xd;
                &quot;moduleName&quot;: &quot;PropertyTax&quot;,&#xd;
                &quot;masterDetails&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;OccupancyType&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;UsageCategory&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;UsageCategoryMajor&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;PropertyType&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;OwnerShipCategory&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="OccupancyType" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">OccupancyType</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.OccupancyType[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">OccupancyType NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="UsageCategory" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">UsageCategory</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.UsageCategory[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">UsageCategory NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="UsageCategoryMajor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">UsageCategoryMajor</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.UsageCategoryMajor[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">UsageCategoryMajor NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="PropertyType" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PropertyType</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.PropertyType[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">PropertyType NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="OwnerShipCategory" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">OwnerShipCategory</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.OwnerShipCategory[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">OwnerShipCategory NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="mdms parser" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import groovy.json.JsonSlurper

def OccupancyType = new JsonSlurper().parseText(vars.get(&quot;OccupancyType&quot;))
def UsageCategory = new JsonSlurper().parseText(vars.get(&quot;UsageCategory&quot;))
def UsageCategoryMajor = new JsonSlurper().parseText(vars.get(&quot;UsageCategoryMajor&quot;))
def PropertyType = new JsonSlurper().parseText(vars.get(&quot;PropertyType&quot;))
def OwnerShipCategory = new JsonSlurper().parseText(vars.get(&quot;OwnerShipCategory&quot;))

// Store values into JMeter variables
vars.put(&quot;OccupancyType.code&quot;, OccupancyType.code ?: &quot;&quot;)
vars.put(&quot;UsageCategory.code&quot;, UsageCategory.code ?: &quot;&quot;)
vars.put(&quot;UsageCategoryMajor.code&quot;, UsageCategoryMajor.code ?: &quot;&quot;)
vars.put(&quot;PropertyType.code&quot;, PropertyType.code ?: &quot;&quot;)
vars.put(&quot;OwnerShipCategory.code&quot;, OwnerShipCategory.code ?: &quot;&quot;)</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/property-services/property/_create">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/property-services/property/_create?tenantId=${state_tenant}.${city_tenant}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;Property&quot;: {&#xd;
    &quot;additionalDetails&quot;: {&#xd;
      &quot;yearConstruction&quot;: &quot;${yearConstruction}&quot;,&#xd;
      &quot;businessName&quot;: &quot;${businessName}&quot;&#xd;
    },&#xd;
    &quot;address&quot;: {&#xd;
      &quot;city&quot;: &quot;Testing&quot;,&#xd;
      &quot;doorNo&quot;: &quot;BD 123&quot;,&#xd;
      &quot;locality&quot;: {&#xd;
        &quot;code&quot;: &quot;${boundaryCode}&quot;,&#xd;
        &quot;area&quot;: &quot;${boundaryArea}&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;usageCategoryMinor&quot;: null,&#xd;
    &quot;units&quot;: [&#xd;
      {&#xd;
        &quot;floorNo&quot;: &quot;0&quot;,&#xd;
        &quot;occupancyType&quot;: &quot;${OccupancyType.code}&quot;,&#xd;
        &quot;constructionDetail&quot;: {&#xd;
          &quot;builtUpArea&quot;: 16.67&#xd;
        },&#xd;
        &quot;usageCategory&quot;: &quot;RESIDENTIAL&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;usageCategoryMajor&quot;: &quot;RESIDENTIAL&quot;,&#xd;
    &quot;landArea&quot;: &quot;200&quot;,&#xd;
    &quot;propertyType&quot;: &quot;${PropertyType.code}&quot;,&#xd;
    &quot;noOfFloors&quot;: 1,&#xd;
    &quot;ownershipCategory&quot;: &quot;INDIVIDUAL.SINGLEOWNER&quot;,&#xd;
    &quot;owners&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Dennis&quot;,&#xd;
        &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
        &quot;fatherOrHusbandName&quot;: &quot;Markus&quot;,&#xd;
        &quot;emailId&quot;: null,&#xd;
        &quot;ownerShipPercentage&quot;: &quot;100&quot;,&#xd;
        &quot;permanentAddress&quot;: &quot;BD 123, PB_TESTING_REVENUE_${boundaryCode}, ${city_tenant}&quot;,&#xd;
        &quot;relationship&quot;: &quot;Father&quot;,&#xd;
        &quot;ownerType&quot;: &quot;NONE&quot;,&#xd;
        &quot;gender&quot;: &quot;Male&quot;,&#xd;
        &quot;isCorrespondenceAddress&quot;: true&#xd;
      }&#xd;
    ],&#xd;
    &quot;source&quot;: &quot;MUNICIPAL_RECORDS&quot;,&#xd;
    &quot;channel&quot;: &quot;CFC_COUNTER&quot;,&#xd;
    &quot;documents&quot;: [&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.ADDRESSPROOF.ELECTRICITYBILL&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.IDENTITYPROOF.DRIVING&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.REGISTRATIONPROOF.COURTDECREE&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.USAGEPROOF.ELECTRICITYBILL&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.CONSTRUCTIONPROOF.BPACERTIFICATE&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;superBuiltUpArea&quot;: null,&#xd;
    &quot;usageCategory&quot;: &quot;RESIDENTIAL&quot;,&#xd;
    &quot;tenantId&quot;: &quot;${state_tenant}.${city_tenant}&quot;,&#xd;
    &quot;creationReason&quot;: &quot;CREATE&quot;&#xd;
  },&#xd;
  &quot;RequestInfo&quot;: {&#xd;
    &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
    &quot;authToken&quot;: &quot;${__P(authToken)}&quot;,&#xd;
    &quot;userInfo&quot;: ${__P(ReqInfo)},&#xd;
    &quot;msgId&quot;: &quot;1757668283442|en_IN&quot;,&#xd;
    &quot;plainAccessRequest&quot;: {}&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${URL}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="propertyId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">propertyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0].propertyId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">PropertyID NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="acknowldgementNumber" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">acknowldgementNumber</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0].acknowldgementNumber</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer">
            <stringProp name="ConstantTimer.delay">20</stringProp>
          </ConstantTimer>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (Update PT)">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/property-services/property/_search">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/property-services/property/_search?tenantId=${state_tenant}.${city_tenant}&amp;propertyIds=${propertyId}&amp;_=1757669330429</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;,&#xd;
        &quot;userInfo&quot;: ${__P(ReqInfo)},&#xd;
        &quot;msgId&quot;: &quot;1757668283442|en_IN&quot;,&#xd;
        &quot;plainAccessRequest&quot;: {}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${URL}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="PropertyDetail" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">PropertyDetail</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">PropertyID NOT FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/property-services/property/_update">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/property-services/property/_update</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;Property&quot;: ${modifiedPropertyPayload},&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;,&#xd;
        &quot;userInfo&quot;: ${__P(ReqInfo)},&#xd;
        &quot;msgId&quot;: &quot;1757668283442|en_IN&quot;,&#xd;
        &quot;plainAccessRequest&quot;: {}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${URL}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="propertyId">
                <stringProp name="JSONPostProcessor.referenceNames">propertyId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0].propertyId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">propertyId NOT FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">import groovy.json.JsonSlurper
import groovy.json.JsonOutput

// 1. Read the saved JSON string from JMeter variable
def originalJson = vars.get(&quot;PropertyDetail&quot;)

// 2. Parse JSON into an object so we can work with it
def parser = new JsonSlurper()
def obj = parser.parseText(originalJson)

// 3. Update only the workflow part
obj.workflow = [
    action: &quot;APPROVE&quot;,                // new action
    comment: &quot;Verified in JMeter&quot;,    // optional comment
    businessService: &quot;PT.CREATE&quot;,
    businessId: &quot;${acknowldgementNumber}&quot;,
    moduleName: &quot;PT&quot;,
    assignes: []                      // keep empty or put values
]

// 4. Convert back into JSON string
def newJson = JsonOutput.toJson(obj)

// 5. Save into a new JMeter variable
vars.put(&quot;modifiedPropertyPayload&quot;, newJson)
</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer">
            <stringProp name="ConstantTimer.delay">20</stringProp>
          </ConstantTimer>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (Assess PT)">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/pt-calculator-v2/propertytax/v2/_estimate">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/pt-calculator-v2/propertytax/v2/_estimate?tenantId=${state_tenant}.${city_tenant}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_estimate&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    },&#xd;
    &quot;Assessment&quot;: {&#xd;
        &quot;financialYear&quot;: &quot;2021-22&quot;,&#xd;
        &quot;tenantId&quot;: &quot;${state_tenant}.${city_tenant}&quot;,&#xd;
        &quot;propertyId&quot;: &quot;${propertyId}&quot;,&#xd;
        &quot;source&quot;: &quot;MUNICIPAL_RECORDS&quot;,&#xd;
        &quot;channel&quot;: &quot;CFC_COUNTER&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${URL}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/property-services/assessment/_create">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/property-services/assessment/_create?tenantId=${state_tenant}.${city_tenant}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_estimate&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    },&#xd;
    &quot;Assessment&quot;: {&#xd;
        &quot;tenantId&quot;: &quot;${state_tenant}.${city_tenant}&quot;,&#xd;
        &quot;propertyId&quot;: &quot;${propertyId}&quot;,&#xd;
        &quot;financialYear&quot;: &quot;2021-22&quot;,&#xd;
        &quot;assessmentDate&quot;: 1759147958319,&#xd;
        &quot;source&quot;: &quot;MUNICIPAL_RECORDS&quot;,&#xd;
        &quot;channel&quot;: &quot;CFC_COUNTER&quot;,&#xd;
        &quot;additionalDetails&quot;: {}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${URL}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/billing-service/bill/v2/_fetchbill">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/billing-service/bill/v2/_fetchbill?consumerCode=${propertyId}&amp;tenantId=${state_tenant}.${city_tenant}&amp;businessService=${businessService}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Mihy&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_create&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${URL}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="mobileNumber">
                <stringProp name="JSONPostProcessor.referenceNames">mobileNumber</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.Bill[0].mobileNumber</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="payerName">
                <stringProp name="JSONPostProcessor.referenceNames">payerName</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.Bill[0].payerName</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="totalAmount">
                <stringProp name="JSONPostProcessor.referenceNames">totalAmount</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.Bill[0].totalAmount</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="billId">
                <stringProp name="JSONPostProcessor.referenceNames">billId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.Bill[0].id</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/collection-services/payments/_create">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/collection-services/payments/_create</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Mihy&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_create&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    },&#xd;
    &quot;Payment&quot;: {&#xd;
        &quot;paymentDetails&quot;: [&#xd;
            {&#xd;
                &quot;businessService&quot;: &quot;${businessService}&quot;,&#xd;
                &quot;billId&quot;: &quot;${billId}&quot;,&#xd;
                &quot;totalDue&quot;: ${totalAmount},&#xd;
                &quot;totalAmountPaid&quot;: ${totalAmount}&#xd;
            }&#xd;
        ],&#xd;
        &quot;tenantId&quot;: &quot;${state_tenant}.${city_tenant}&quot;,&#xd;
        &quot;totalDue&quot;: ${totalAmount},&#xd;
        &quot;paymentMode&quot;: &quot;Cash&quot;,&#xd;
        &quot;paidBy&quot;: &quot;${payerName}&quot;,&#xd;
        &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
        &quot;payerName&quot;: &quot;${payerName}&quot;,&#xd;
        &quot;totalAmountPaid&quot;: ${totalAmount}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${URL}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Create &amp; Transfer Property">
          <boolProp name="TransactionController.parent">true</boolProp>
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/egov-location/_search (REVENUE - Locality)">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/egov-location/location/v11/boundarys/_search?hierarchyTypeCode=REVENUE&amp;boundaryType=Locality&amp;tenantId=${state_tenant}.${city_tenant}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="boundaries" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">boundaries</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.TenantBoundary[0].boundary[*] </stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <boolProp name="JSONPostProcessor.compute_concat">true</boolProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="boundaries parser" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import groovy.json.JsonSlurper

def json = new JsonSlurper().parseText(vars.get(&quot;boundaries&quot;))

// Store values into JMeter variables
vars.put(&quot;boundaryArea&quot;, json.area ?: &quot;&quot;)
vars.put(&quot;boundaryPincode&quot;, json.pincode ?: &quot;&quot;)
vars.put(&quot;boundaryCode&quot;, json.code ?: &quot;&quot;)
vars.put(&quot;boundaryName&quot;, json.name ?: &quot;&quot;)
</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="MDMS PropertyTax">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/egov-mdms-service/v1/_search?tenantId=${state_tenant}.${city_tenant}</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;ts&quot;: &quot;&quot;,&#xd;
        &quot;action&quot;: &quot;_search&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    },&#xd;
    &quot;MdmsCriteria&quot;: {&#xd;
        &quot;tenantId&quot;: &quot;${state_tenant}&quot;,&#xd;
        &quot;moduleDetails&quot;: [&#xd;
            {&#xd;
                &quot;moduleName&quot;: &quot;PropertyTax&quot;,&#xd;
                &quot;masterDetails&quot;: [&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;OccupancyType&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;UsageCategory&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;UsageCategoryMajor&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;PropertyType&quot;&#xd;
                    },&#xd;
                    {&#xd;
                        &quot;name&quot;: &quot;OwnerShipCategory&quot;&#xd;
                    }&#xd;
                ]&#xd;
            }&#xd;
        ]&#xd;
    }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="OccupancyType" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">OccupancyType</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.OccupancyType[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">OccupancyType NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="UsageCategory" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">UsageCategory</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.UsageCategory[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">UsageCategory NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="UsageCategoryMajor" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">UsageCategoryMajor</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.UsageCategoryMajor[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">UsageCategoryMajor NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="PropertyType" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">PropertyType</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.PropertyType[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">PropertyType NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="OwnerShipCategory" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">OwnerShipCategory</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.MdmsRes.PropertyTax.OwnerShipCategory[*]</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">0</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">OwnerShipCategory NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSR223PostProcessor guiclass="TestBeanGUI" testclass="JSR223PostProcessor" testname="mdms parser" enabled="true">
              <stringProp name="scriptLanguage">groovy</stringProp>
              <stringProp name="parameters"></stringProp>
              <stringProp name="filename"></stringProp>
              <stringProp name="cacheKey">true</stringProp>
              <stringProp name="script">import groovy.json.JsonSlurper

def OccupancyType = new JsonSlurper().parseText(vars.get(&quot;OccupancyType&quot;))
def UsageCategory = new JsonSlurper().parseText(vars.get(&quot;UsageCategory&quot;))
def UsageCategoryMajor = new JsonSlurper().parseText(vars.get(&quot;UsageCategoryMajor&quot;))
def PropertyType = new JsonSlurper().parseText(vars.get(&quot;PropertyType&quot;))
def OwnerShipCategory = new JsonSlurper().parseText(vars.get(&quot;OwnerShipCategory&quot;))

// Store values into JMeter variables
vars.put(&quot;OccupancyType.code&quot;, OccupancyType.code ?: &quot;&quot;)
vars.put(&quot;UsageCategory.code&quot;, UsageCategory.code ?: &quot;&quot;)
vars.put(&quot;UsageCategoryMajor.code&quot;, UsageCategoryMajor.code ?: &quot;&quot;)
vars.put(&quot;PropertyType.code&quot;, PropertyType.code ?: &quot;&quot;)
vars.put(&quot;OwnerShipCategory.code&quot;, OwnerShipCategory.code ?: &quot;&quot;)</stringProp>
            </JSR223PostProcessor>
            <hashTree/>
            <DebugPostProcessor guiclass="TestBeanGUI" testclass="DebugPostProcessor" testname="Debug PostProcessor" enabled="true">
              <boolProp name="displayJMeterProperties">false</boolProp>
              <boolProp name="displayJMeterVariables">true</boolProp>
              <boolProp name="displaySamplerProperties">true</boolProp>
              <boolProp name="displaySystemProperties">false</boolProp>
            </DebugPostProcessor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/property-services/property/_create">
            <stringProp name="HTTPSampler.domain">${URL}</stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.path">/property-services/property/_create?tenantId=${state_tenant}.${city_tenant}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&#xd;
  &quot;Property&quot;: {&#xd;
    &quot;additionalDetails&quot;: {&#xd;
      &quot;yearConstruction&quot;: &quot;${yearConstruction}&quot;,&#xd;
      &quot;businessName&quot;: &quot;${businessName}&quot;&#xd;
    },&#xd;
    &quot;address&quot;: {&#xd;
      &quot;city&quot;: &quot;Testing&quot;,&#xd;
      &quot;doorNo&quot;: &quot;BD 123&quot;,&#xd;
      &quot;locality&quot;: {&#xd;
        &quot;code&quot;: &quot;${boundaryCode}&quot;,&#xd;
        &quot;area&quot;: &quot;${boundaryArea}&quot;&#xd;
      }&#xd;
    },&#xd;
    &quot;usageCategoryMinor&quot;: null,&#xd;
    &quot;units&quot;: [&#xd;
      {&#xd;
        &quot;floorNo&quot;: &quot;0&quot;,&#xd;
        &quot;occupancyType&quot;: &quot;${OccupancyType.code}&quot;,&#xd;
        &quot;constructionDetail&quot;: {&#xd;
          &quot;builtUpArea&quot;: 16.67&#xd;
        },&#xd;
        &quot;usageCategory&quot;: &quot;RESIDENTIAL&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;usageCategoryMajor&quot;: &quot;RESIDENTIAL&quot;,&#xd;
    &quot;landArea&quot;: &quot;200&quot;,&#xd;
    &quot;propertyType&quot;: &quot;${PropertyType.code}&quot;,&#xd;
    &quot;noOfFloors&quot;: 1,&#xd;
    &quot;ownershipCategory&quot;: &quot;INDIVIDUAL.SINGLEOWNER&quot;,&#xd;
    &quot;owners&quot;: [&#xd;
      {&#xd;
        &quot;name&quot;: &quot;Dennis&quot;,&#xd;
        &quot;mobileNumber&quot;: &quot;${mobileNumber}&quot;,&#xd;
        &quot;fatherOrHusbandName&quot;: &quot;Markus&quot;,&#xd;
        &quot;emailId&quot;: null,&#xd;
        &quot;ownerShipPercentage&quot;: &quot;100&quot;,&#xd;
        &quot;permanentAddress&quot;: &quot;BD 123, PB_TESTING_REVENUE_${boundaryCode}, ${city_tenant}&quot;,&#xd;
        &quot;relationship&quot;: &quot;Father&quot;,&#xd;
        &quot;ownerType&quot;: &quot;NONE&quot;,&#xd;
        &quot;gender&quot;: &quot;Male&quot;,&#xd;
        &quot;isCorrespondenceAddress&quot;: true&#xd;
      }&#xd;
    ],&#xd;
    &quot;source&quot;: &quot;MUNICIPAL_RECORDS&quot;,&#xd;
    &quot;channel&quot;: &quot;CFC_COUNTER&quot;,&#xd;
    &quot;documents&quot;: [&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.ADDRESSPROOF.ELECTRICITYBILL&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.IDENTITYPROOF.DRIVING&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.REGISTRATIONPROOF.COURTDECREE&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.USAGEPROOF.ELECTRICITYBILL&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      },&#xd;
      {&#xd;
        &quot;documentType&quot;: &quot;OWNER.CONSTRUCTIONPROOF.BPACERTIFICATE&quot;,&#xd;
        &quot;fileStoreId&quot;: &quot;${__P(fileStoreId)}&quot;,&#xd;
        &quot;documentUid&quot;: &quot;${__P(fileStoreId)}&quot;&#xd;
      }&#xd;
    ],&#xd;
    &quot;superBuiltUpArea&quot;: null,&#xd;
    &quot;usageCategory&quot;: &quot;RESIDENTIAL&quot;,&#xd;
    &quot;tenantId&quot;: &quot;${state_tenant}.${city_tenant}&quot;,&#xd;
    &quot;creationReason&quot;: &quot;CREATE&quot;&#xd;
  },&#xd;
  &quot;RequestInfo&quot;: {&#xd;
    &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
    &quot;authToken&quot;: &quot;${__P(authToken)}&quot;,&#xd;
    &quot;userInfo&quot;: ${__P(ReqInfo)},&#xd;
    &quot;msgId&quot;: &quot;1757668283442|en_IN&quot;,&#xd;
    &quot;plainAccessRequest&quot;: {}&#xd;
  }&#xd;
}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                </elementProp>
                <elementProp name="" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">https://${URL}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="propertyId" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">propertyId</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0].propertyId</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
              <stringProp name="JSONPostProcessor.defaultValues">PropertyID NOT FOUND</stringProp>
            </JSONPostProcessor>
            <hashTree/>
            <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="acknowldgementNumber" enabled="true">
              <stringProp name="JSONPostProcessor.referenceNames">acknowldgementNumber</stringProp>
              <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0].acknowldgementNumber</stringProp>
              <stringProp name="JSONPostProcessor.match_numbers"></stringProp>
            </JSONPostProcessor>
            <hashTree/>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">20</stringProp>
          </ConstantTimer>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (Update PT)">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/property-services/property/_search" enabled="true">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/property-services/property/_search?tenantId=${state_tenant}.${city_tenant}&amp;propertyIds=${propertyId}&amp;_=1757669330429</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;,&#xd;
        &quot;userInfo&quot;: ${__P(ReqInfo)},&#xd;
        &quot;msgId&quot;: &quot;1757668283442|en_IN&quot;,&#xd;
        &quot;plainAccessRequest&quot;: {}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${URL}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="PropertyDetail" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">PropertyDetail</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0]</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">PropertyID NOT FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/property-services/property/_update">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/property-services/property/_update</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;Property&quot;: ${modifiedPropertyPayload},&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;,&#xd;
        &quot;userInfo&quot;: ${__P(ReqInfo)},&#xd;
        &quot;msgId&quot;: &quot;1757668283442|en_IN&quot;,&#xd;
        &quot;plainAccessRequest&quot;: {}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${URL}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="propertyId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">propertyId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0].propertyId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">propertyId NOT FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">import groovy.json.JsonSlurper
import groovy.json.JsonOutput

// 1. Read the saved JSON string from JMeter variable
def originalJson = vars.get(&quot;PropertyDetail&quot;)

// 2. Parse JSON into an object so we can work with it
def parser = new JsonSlurper()
def obj = parser.parseText(originalJson)

// 3. Update only the workflow part
obj.workflow = [
    action: &quot;APPROVE&quot;,                // new action
    comment: &quot;Verified in JMeter&quot;,    // optional comment
    businessService: &quot;PT.CREATE&quot;,
    businessId: &quot;${acknowldgementNumber}&quot;,
    moduleName: &quot;PT&quot;,
    assignes: []                      // keep empty or put values
]

// 4. Convert back into JSON string
def newJson = JsonOutput.toJson(obj)

// 5. Save into a new JMeter variable
vars.put(&quot;modifiedPropertyPayload&quot;, newJson)
</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
          <ConstantTimer guiclass="ConstantTimerGui" testclass="ConstantTimer" testname="Constant Timer" enabled="true">
            <stringProp name="ConstantTimer.delay">20</stringProp>
          </ConstantTimer>
          <hashTree/>
          <IfController guiclass="IfControllerPanel" testclass="IfController" testname="If Controller (Transfer PT)">
            <stringProp name="IfController.condition">${JMeterThread.last_sample_ok}</stringProp>
            <boolProp name="IfController.evaluateAll">false</boolProp>
            <boolProp name="IfController.useExpression">true</boolProp>
          </IfController>
          <hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/property-services/property/_update  (Transfer)">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/property-services/property/_update?tenantId=${state_tenant}.${city_tenant}&amp;propertyIds=${propertyId}</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;ver&quot;: &quot;.01&quot;,&#xd;
        &quot;action&quot;: &quot;_update&quot;,&#xd;
        &quot;did&quot;: &quot;1&quot;,&#xd;
        &quot;key&quot;: &quot;&quot;,&#xd;
        &quot;msgId&quot;: &quot;20170310130900|en_IN&quot;,&#xd;
        &quot;requesterId&quot;: &quot;&quot;,&#xd;
        &quot;authToken&quot;: &quot;18fa104f-73f0-4b61-8683-707da29ca8ff&quot;&#xd;
    },&#xd;
    &quot;Property&quot;: {&#xd;
        &quot;id&quot;: &quot;15be2561-3a79-49ee-af83-d10dd2c8b775&quot;,&#xd;
        &quot;propertyId&quot;: &quot;PT-1012-2498670&quot;,&#xd;
        &quot;surveyId&quot;: null,&#xd;
        &quot;linkedProperties&quot;: null,&#xd;
        &quot;tenantId&quot;: &quot;pb.testing&quot;,&#xd;
        &quot;accountId&quot;: &quot;6dbdf0cc-b585-43d1-9c33-0f79240425cd&quot;,&#xd;
        &quot;oldPropertyId&quot;: null,&#xd;
        &quot;status&quot;: &quot;ACTIVE&quot;,&#xd;
        &quot;address&quot;: {&#xd;
            &quot;tenantId&quot;: &quot;pb.testing&quot;,&#xd;
            &quot;doorNo&quot;: &quot;BD 123&quot;,&#xd;
            &quot;plotNo&quot;: null,&#xd;
            &quot;id&quot;: &quot;80238fc1-a671-4339-a3ca-278bacd209df&quot;,&#xd;
            &quot;landmark&quot;: null,&#xd;
            &quot;city&quot;: &quot;Testing&quot;,&#xd;
            &quot;district&quot;: null,&#xd;
            &quot;region&quot;: null,&#xd;
            &quot;state&quot;: null,&#xd;
            &quot;country&quot;: null,&#xd;
            &quot;pincode&quot;: null,&#xd;
            &quot;buildingName&quot;: null,&#xd;
            &quot;street&quot;: null,&#xd;
            &quot;locality&quot;: {&#xd;
                &quot;code&quot;: &quot;SC4&quot;,&#xd;
                &quot;name&quot;: &quot;Bawian - B2 - A1&quot;,&#xd;
                &quot;label&quot;: &quot;Locality&quot;,&#xd;
                &quot;latitude&quot;: null,&#xd;
                &quot;longitude&quot;: null,&#xd;
                &quot;area&quot;: &quot;AREA1&quot;,&#xd;
                &quot;children&quot;: [],&#xd;
                &quot;materializedPath&quot;: null&#xd;
            },&#xd;
            &quot;geoLocation&quot;: {&#xd;
                &quot;latitude&quot;: 0,&#xd;
                &quot;longitude&quot;: 0&#xd;
            },&#xd;
            &quot;additionalDetails&quot;: null&#xd;
        },&#xd;
        &quot;acknowldgementNumber&quot;: &quot;AC-2025-09-30-2896444&quot;,&#xd;
        &quot;propertyType&quot;: &quot;BUILTUP.INDEPENDENTPROPERTY&quot;,&#xd;
        &quot;ownershipCategory&quot;: &quot;INDIVIDUAL.SINGLEOWNER&quot;,&#xd;
        &quot;owners&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: null,&#xd;
                &quot;uuid&quot;: &quot;dccf2a73-4ed9-45f8-a8f4-988c3b63b4c9&quot;,&#xd;
                &quot;userName&quot;: &quot;6d06936d-c56a-44fd-ac72-16897fc51650&quot;,&#xd;
                &quot;password&quot;: null,&#xd;
                &quot;salutation&quot;: null,&#xd;
                &quot;name&quot;: &quot;Dennis&quot;,&#xd;
                &quot;gender&quot;: &quot;MALE&quot;,&#xd;
                &quot;mobileNumber&quot;: &quot;9876543210&quot;,&#xd;
                &quot;emailId&quot;: null,&#xd;
                &quot;altContactNumber&quot;: null,&#xd;
                &quot;pan&quot;: null,&#xd;
                &quot;aadhaarNumber&quot;: null,&#xd;
                &quot;permanentAddress&quot;: &quot;BD 123, PB_TESTING_REVENUE_SC4, testing&quot;,&#xd;
                &quot;permanentCity&quot;: null,&#xd;
                &quot;permanentPinCode&quot;: null,&#xd;
                &quot;correspondenceCity&quot;: null,&#xd;
                &quot;correspondencePinCode&quot;: null,&#xd;
                &quot;correspondenceAddress&quot;: null,&#xd;
                &quot;active&quot;: true,&#xd;
                &quot;dob&quot;: null,&#xd;
                &quot;pwdExpiryDate&quot;: 1836996271000,&#xd;
                &quot;locale&quot;: null,&#xd;
                &quot;type&quot;: &quot;CITIZEN&quot;,&#xd;
                &quot;signature&quot;: null,&#xd;
                &quot;accountLocked&quot;: false,&#xd;
                &quot;roles&quot;: [&#xd;
                    {&#xd;
                        &quot;id&quot;: null,&#xd;
                        &quot;name&quot;: &quot;Citizen&quot;,&#xd;
                        &quot;code&quot;: &quot;CITIZEN&quot;,&#xd;
                        &quot;tenantId&quot;: &quot;pb&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;fatherOrHusbandName&quot;: &quot;Markus&quot;,&#xd;
                &quot;bloodGroup&quot;: null,&#xd;
                &quot;identificationMark&quot;: null,&#xd;
                &quot;photo&quot;: null,&#xd;
                &quot;createdBy&quot;: &quot;2398&quot;,&#xd;
                &quot;createdDate&quot;: 1759236272000,&#xd;
                &quot;lastModifiedBy&quot;: &quot;2398&quot;,&#xd;
                &quot;lastModifiedDate&quot;: 1759236272000,&#xd;
                &quot;tenantId&quot;: &quot;pb&quot;,&#xd;
                &quot;alternatemobilenumber&quot;: null,&#xd;
                &quot;ownerInfoUuid&quot;: &quot;1c641927-77f8-4838-81f5-7c3b9f34527a&quot;,&#xd;
                &quot;isPrimaryOwner&quot;: null,&#xd;
                &quot;ownerShipPercentage&quot;: 100,&#xd;
                &quot;ownerType&quot;: &quot;NONE&quot;,&#xd;
                &quot;institutionId&quot;: null,&#xd;
                &quot;status&quot;: &quot;INACTIVE&quot;,&#xd;
                &quot;documents&quot;: null,&#xd;
                &quot;additionalDetails&quot;: null,&#xd;
                &quot;relationship&quot;: &quot;Father&quot;,&#xd;
                &quot;documentUid&quot;: &quot;NA&quot;,&#xd;
                &quot;documentType&quot;: &quot;NA&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;id&quot;: null,&#xd;
                &quot;uuid&quot;: &quot;9ffd6704-5912-4c4a-9790-9e4f4bbaa024&quot;,&#xd;
                &quot;userName&quot;: &quot;b6b7583f-8b7d-4c67-bbeb-5eb223482055&quot;,&#xd;
                &quot;password&quot;: null,&#xd;
                &quot;salutation&quot;: null,&#xd;
                &quot;name&quot;: &quot;Dennis&quot;,&#xd;
                &quot;gender&quot;: &quot;MALE&quot;,&#xd;
                &quot;mobileNumber&quot;: &quot;9876543210&quot;,&#xd;
                &quot;emailId&quot;: null,&#xd;
                &quot;altContactNumber&quot;: null,&#xd;
                &quot;pan&quot;: null,&#xd;
                &quot;aadhaarNumber&quot;: null,&#xd;
                &quot;permanentAddress&quot;: &quot;BD 123, PB_TESTING_REVENUE_SC4, testing&quot;,&#xd;
                &quot;permanentCity&quot;: null,&#xd;
                &quot;permanentPinCode&quot;: null,&#xd;
                &quot;correspondenceCity&quot;: null,&#xd;
                &quot;correspondencePinCode&quot;: null,&#xd;
                &quot;correspondenceAddress&quot;: null,&#xd;
                &quot;active&quot;: true,&#xd;
                &quot;dob&quot;: null,&#xd;
                &quot;pwdExpiryDate&quot;: 1836996271000,&#xd;
                &quot;locale&quot;: null,&#xd;
                &quot;type&quot;: &quot;CITIZEN&quot;,&#xd;
                &quot;signature&quot;: null,&#xd;
                &quot;accountLocked&quot;: false,&#xd;
                &quot;roles&quot;: [&#xd;
                    {&#xd;
                        &quot;id&quot;: null,&#xd;
                        &quot;name&quot;: &quot;Citizen&quot;,&#xd;
                        &quot;code&quot;: &quot;CITIZEN&quot;,&#xd;
                        &quot;tenantId&quot;: &quot;pb&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;fatherOrHusbandName&quot;: &quot;Markus&quot;,&#xd;
                &quot;bloodGroup&quot;: null,&#xd;
                &quot;identificationMark&quot;: null,&#xd;
                &quot;photo&quot;: null,&#xd;
                &quot;createdBy&quot;: &quot;2398&quot;,&#xd;
                &quot;createdDate&quot;: 1759236271000,&#xd;
                &quot;lastModifiedBy&quot;: &quot;2398&quot;,&#xd;
                &quot;lastModifiedDate&quot;: 1759236271000,&#xd;
                &quot;tenantId&quot;: &quot;pb&quot;,&#xd;
                &quot;alternatemobilenumber&quot;: null,&#xd;
                &quot;ownerInfoUuid&quot;: &quot;1c641927-77f8-4838-81f5-7c3b9f34527a&quot;,&#xd;
                &quot;isPrimaryOwner&quot;: null,&#xd;
                &quot;ownerShipPercentage&quot;: 100,&#xd;
                &quot;ownerType&quot;: &quot;NONE&quot;,&#xd;
                &quot;institutionId&quot;: null,&#xd;
                &quot;status&quot;: &quot;INACTIVE&quot;,&#xd;
                &quot;documents&quot;: null,&#xd;
                &quot;additionalDetails&quot;: null,&#xd;
                &quot;relationship&quot;: &quot;Father&quot;,&#xd;
                &quot;documentUid&quot;: &quot;NA&quot;,&#xd;
                &quot;documentType&quot;: &quot;NA&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;name&quot;: &quot;Donald&quot;,&#xd;
                &quot;gender&quot;: &quot;MALE&quot;,&#xd;
                &quot;mobileNumber&quot;: &quot;9876543211&quot;,&#xd;
                &quot;fatherOrHusbandName&quot;: &quot;Duck&quot;,&#xd;
                &quot;ownerShipPercentage&quot;: &quot;100&quot;,&#xd;
                &quot;relationship&quot;: &quot;FATHER&quot;,&#xd;
                &quot;documentType&quot;: &quot;&quot;,&#xd;
                &quot;ownerType&quot;: &quot;NONE&quot;,&#xd;
                &quot;documentUid&quot;: &quot;&quot;,&#xd;
                &quot;permanentAddress&quot;: &quot;ST 123&quot;,&#xd;
                &quot;status&quot;: &quot;ACTIVE&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;institution&quot;: null,&#xd;
        &quot;creationReason&quot;: &quot;MUTATION&quot;,&#xd;
        &quot;usageCategory&quot;: &quot;RESIDENTIAL&quot;,&#xd;
        &quot;noOfFloors&quot;: 1,&#xd;
        &quot;landArea&quot;: 200,&#xd;
        &quot;superBuiltUpArea&quot;: null,&#xd;
        &quot;source&quot;: &quot;MUNICIPAL_RECORDS&quot;,&#xd;
        &quot;channel&quot;: &quot;CFC_COUNTER&quot;,&#xd;
        &quot;isactive&quot;: false,&#xd;
        &quot;isinactive&quot;: false,&#xd;
        &quot;documents&quot;: [&#xd;
            {&#xd;
                &quot;documentType&quot;: &quot;OWNER.ADDRESSPROOF.ELECTRICITYBILL&quot;,&#xd;
                &quot;fileStoreId&quot;: &quot;ed94272c-b598-4e0f-961f-2fe9666dfc5f&quot;,&#xd;
                &quot;documentUid&quot;: &quot;ed94272c-b598-4e0f-961f-2fe9666dfc5f&quot;,&#xd;
                &quot;auditDetails&quot;: null,&#xd;
                &quot;status&quot;: &quot;ACTIVE&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;documentType&quot;: &quot;OWNER.IDENTITYPROOF.AADHAAR&quot;,&#xd;
                &quot;fileStoreId&quot;: &quot;eaedf45b-f24d-4490-b1c7-a704910dc86a&quot;,&#xd;
                &quot;documentUid&quot;: &quot;eaedf45b-f24d-4490-b1c7-a704910dc86a&quot;,&#xd;
                &quot;auditDetails&quot;: null,&#xd;
                &quot;status&quot;: &quot;ACTIVE&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;documentType&quot;: &quot;FAMILYSETTLEMENT&quot;,&#xd;
                &quot;fileStoreId&quot;: &quot;ddbb3992-a69d-4fec-8a10-1d4aea14c3ea&quot;,&#xd;
                &quot;documentUid&quot;: &quot;ddbb3992-a69d-4fec-8a10-1d4aea14c3ea&quot;,&#xd;
                &quot;auditDetails&quot;: null,&#xd;
                &quot;status&quot;: &quot;ACTIVE&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;id&quot;: &quot;20dd05a4-8376-4d07-8fa6-63d4fb81d823&quot;,&#xd;
                &quot;documentType&quot;: &quot;OWNER.USAGEPROOF.ELECTRICITYBILL&quot;,&#xd;
                &quot;fileStoreId&quot;: &quot;c9cfdb7d-b9c8-4318-af71-4d4d6e877065&quot;,&#xd;
                &quot;documentUid&quot;: &quot;c9cfdb7d-b9c8-4318-af71-4d4d6e877065&quot;,&#xd;
                &quot;auditDetails&quot;: null,&#xd;
                &quot;status&quot;: &quot;ACTIVE&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;id&quot;: &quot;aaa6eb3a-c570-448f-9d90-2bbf180ff49b&quot;,&#xd;
                &quot;documentType&quot;: &quot;OWNER.CONSTRUCTIONPROOF.BPACERTIFICATE&quot;,&#xd;
                &quot;fileStoreId&quot;: &quot;c9cfdb7d-b9c8-4318-af71-4d4d6e877065&quot;,&#xd;
                &quot;documentUid&quot;: &quot;c9cfdb7d-b9c8-4318-af71-4d4d6e877065&quot;,&#xd;
                &quot;auditDetails&quot;: null,&#xd;
                &quot;status&quot;: &quot;ACTIVE&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;units&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: &quot;870c85d4-7c3c-4c25-9f30-cdf22709425c&quot;,&#xd;
                &quot;tenantId&quot;: null,&#xd;
                &quot;floorNo&quot;: 0,&#xd;
                &quot;unitType&quot;: null,&#xd;
                &quot;usageCategory&quot;: &quot;RESIDENTIAL&quot;,&#xd;
                &quot;occupancyType&quot;: &quot;UNOCCUPIED&quot;,&#xd;
                &quot;occupancyName&quot;: &quot;Unoccupied&quot;,&#xd;
                &quot;active&quot;: true,&#xd;
                &quot;occupancyDate&quot;: 0,&#xd;
                &quot;constructionDetail&quot;: {&#xd;
                    &quot;carpetArea&quot;: null,&#xd;
                    &quot;builtUpArea&quot;: 16.67,&#xd;
                    &quot;plinthArea&quot;: null,&#xd;
                    &quot;superBuiltUpArea&quot;: null,&#xd;
                    &quot;constructionType&quot;: null,&#xd;
                    &quot;constructionDate&quot;: null,&#xd;
                    &quot;dimensions&quot;: null&#xd;
                },&#xd;
                &quot;additionalDetails&quot;: null,&#xd;
                &quot;auditDetails&quot;: null,&#xd;
                &quot;arv&quot;: null&#xd;
            }&#xd;
        ],&#xd;
        &quot;dueAmount&quot;: null,&#xd;
        &quot;dueAmountYear&quot;: null,&#xd;
        &quot;additionalDetails&quot;: {&#xd;
            &quot;reasonForTransfer&quot;: &quot;FAMILYSETTLEMENT&quot;,&#xd;
            &quot;marketValue&quot;: &quot;2000000&quot;,&#xd;
            &quot;documentNumber&quot;: &quot;894998&quot;,&#xd;
            &quot;documentDate&quot;: 1759256999000,&#xd;
            &quot;documentValue&quot;: &quot;2000000&quot;,&#xd;
            &quot;remarks&quot;: &quot;Transfer of Owner&quot;&#xd;
        },&#xd;
        &quot;auditDetails&quot;: {&#xd;
            &quot;createdBy&quot;: &quot;6dbdf0cc-b585-43d1-9c33-0f79240425cd&quot;,&#xd;
            &quot;lastModifiedBy&quot;: &quot;6dbdf0cc-b585-43d1-9c33-0f79240425cd&quot;,&#xd;
            &quot;createdTime&quot;: 1759236271298,&#xd;
            &quot;lastModifiedTime&quot;: 1759236272270&#xd;
        },&#xd;
        &quot;workflow&quot;: {&#xd;
            &quot;businessService&quot;: &quot;PT.MUTATION&quot;,&#xd;
            &quot;tenantId&quot;: &quot;pb.testing&quot;,&#xd;
            &quot;action&quot;: &quot;OPEN&quot;,&#xd;
            &quot;moduleName&quot;: &quot;PT&quot;&#xd;
        },&#xd;
        &quot;AlternateUpdated&quot;: false,&#xd;
        &quot;isOldDataEncryptionRequest&quot;: false,&#xd;
        &quot;ownersInit&quot;: [&#xd;
            {&#xd;
                &quot;id&quot;: null,&#xd;
                &quot;uuid&quot;: &quot;dccf2a73-4ed9-45f8-a8f4-988c3b63b4c9&quot;,&#xd;
                &quot;userName&quot;: &quot;6d06936d-c56a-44fd-ac72-16897fc51650&quot;,&#xd;
                &quot;password&quot;: null,&#xd;
                &quot;salutation&quot;: null,&#xd;
                &quot;name&quot;: &quot;Dennis&quot;,&#xd;
                &quot;gender&quot;: &quot;MALE&quot;,&#xd;
                &quot;mobileNumber&quot;: &quot;9876543210&quot;,&#xd;
                &quot;emailId&quot;: null,&#xd;
                &quot;altContactNumber&quot;: null,&#xd;
                &quot;pan&quot;: null,&#xd;
                &quot;aadhaarNumber&quot;: null,&#xd;
                &quot;permanentAddress&quot;: &quot;BD 123, PB_TESTING_REVENUE_SC4, testing&quot;,&#xd;
                &quot;permanentCity&quot;: null,&#xd;
                &quot;permanentPinCode&quot;: null,&#xd;
                &quot;correspondenceCity&quot;: null,&#xd;
                &quot;correspondencePinCode&quot;: null,&#xd;
                &quot;correspondenceAddress&quot;: null,&#xd;
                &quot;active&quot;: true,&#xd;
                &quot;dob&quot;: null,&#xd;
                &quot;pwdExpiryDate&quot;: 1836996271000,&#xd;
                &quot;locale&quot;: null,&#xd;
                &quot;type&quot;: &quot;CITIZEN&quot;,&#xd;
                &quot;signature&quot;: null,&#xd;
                &quot;accountLocked&quot;: false,&#xd;
                &quot;roles&quot;: [&#xd;
                    {&#xd;
                        &quot;id&quot;: null,&#xd;
                        &quot;name&quot;: &quot;Citizen&quot;,&#xd;
                        &quot;code&quot;: &quot;CITIZEN&quot;,&#xd;
                        &quot;tenantId&quot;: &quot;pb&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;fatherOrHusbandName&quot;: &quot;Markus&quot;,&#xd;
                &quot;bloodGroup&quot;: null,&#xd;
                &quot;identificationMark&quot;: null,&#xd;
                &quot;photo&quot;: null,&#xd;
                &quot;createdBy&quot;: &quot;2398&quot;,&#xd;
                &quot;createdDate&quot;: 1759236272000,&#xd;
                &quot;lastModifiedBy&quot;: &quot;2398&quot;,&#xd;
                &quot;lastModifiedDate&quot;: 1759236272000,&#xd;
                &quot;tenantId&quot;: &quot;pb&quot;,&#xd;
                &quot;alternatemobilenumber&quot;: null,&#xd;
                &quot;ownerInfoUuid&quot;: &quot;1c641927-77f8-4838-81f5-7c3b9f34527a&quot;,&#xd;
                &quot;isPrimaryOwner&quot;: null,&#xd;
                &quot;ownerShipPercentage&quot;: 100,&#xd;
                &quot;ownerType&quot;: &quot;NONE&quot;,&#xd;
                &quot;institutionId&quot;: null,&#xd;
                &quot;status&quot;: &quot;INACTIVE&quot;,&#xd;
                &quot;documents&quot;: null,&#xd;
                &quot;additionalDetails&quot;: null,&#xd;
                &quot;relationship&quot;: &quot;Father&quot;,&#xd;
                &quot;documentUid&quot;: &quot;NA&quot;,&#xd;
                &quot;documentType&quot;: &quot;NA&quot;&#xd;
            },&#xd;
            {&#xd;
                &quot;id&quot;: null,&#xd;
                &quot;uuid&quot;: &quot;9ffd6704-5912-4c4a-9790-9e4f4bbaa024&quot;,&#xd;
                &quot;userName&quot;: &quot;b6b7583f-8b7d-4c67-bbeb-5eb223482055&quot;,&#xd;
                &quot;password&quot;: null,&#xd;
                &quot;salutation&quot;: null,&#xd;
                &quot;name&quot;: &quot;Dennis&quot;,&#xd;
                &quot;gender&quot;: &quot;MALE&quot;,&#xd;
                &quot;mobileNumber&quot;: &quot;9876543210&quot;,&#xd;
                &quot;emailId&quot;: null,&#xd;
                &quot;altContactNumber&quot;: null,&#xd;
                &quot;pan&quot;: null,&#xd;
                &quot;aadhaarNumber&quot;: null,&#xd;
                &quot;permanentAddress&quot;: &quot;BD 123, PB_TESTING_REVENUE_SC4, testing&quot;,&#xd;
                &quot;permanentCity&quot;: null,&#xd;
                &quot;permanentPinCode&quot;: null,&#xd;
                &quot;correspondenceCity&quot;: null,&#xd;
                &quot;correspondencePinCode&quot;: null,&#xd;
                &quot;correspondenceAddress&quot;: null,&#xd;
                &quot;active&quot;: true,&#xd;
                &quot;dob&quot;: null,&#xd;
                &quot;pwdExpiryDate&quot;: 1836996271000,&#xd;
                &quot;locale&quot;: null,&#xd;
                &quot;type&quot;: &quot;CITIZEN&quot;,&#xd;
                &quot;signature&quot;: null,&#xd;
                &quot;accountLocked&quot;: false,&#xd;
                &quot;roles&quot;: [&#xd;
                    {&#xd;
                        &quot;id&quot;: null,&#xd;
                        &quot;name&quot;: &quot;Citizen&quot;,&#xd;
                        &quot;code&quot;: &quot;CITIZEN&quot;,&#xd;
                        &quot;tenantId&quot;: &quot;pb&quot;&#xd;
                    }&#xd;
                ],&#xd;
                &quot;fatherOrHusbandName&quot;: &quot;Markus&quot;,&#xd;
                &quot;bloodGroup&quot;: null,&#xd;
                &quot;identificationMark&quot;: null,&#xd;
                &quot;photo&quot;: null,&#xd;
                &quot;createdBy&quot;: &quot;2398&quot;,&#xd;
                &quot;createdDate&quot;: 1759236271000,&#xd;
                &quot;lastModifiedBy&quot;: &quot;2398&quot;,&#xd;
                &quot;lastModifiedDate&quot;: 1759236271000,&#xd;
                &quot;tenantId&quot;: &quot;pb&quot;,&#xd;
                &quot;alternatemobilenumber&quot;: null,&#xd;
                &quot;ownerInfoUuid&quot;: &quot;1c641927-77f8-4838-81f5-7c3b9f34527a&quot;,&#xd;
                &quot;isPrimaryOwner&quot;: null,&#xd;
                &quot;ownerShipPercentage&quot;: 100,&#xd;
                &quot;ownerType&quot;: &quot;NONE&quot;,&#xd;
                &quot;institutionId&quot;: null,&#xd;
                &quot;status&quot;: &quot;INACTIVE&quot;,&#xd;
                &quot;documents&quot;: null,&#xd;
                &quot;additionalDetails&quot;: null,&#xd;
                &quot;relationship&quot;: &quot;Father&quot;,&#xd;
                &quot;documentUid&quot;: &quot;NA&quot;,&#xd;
                &quot;documentType&quot;: &quot;NA&quot;&#xd;
            }&#xd;
        ],&#xd;
        &quot;ownershipCategoryInit&quot;: &quot;INDIVIDUAL.SINGLEOWNER&quot;&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${URL}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
            </hashTree>
            <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/property-services/property/_update (Transfer Approve)">
              <stringProp name="HTTPSampler.domain">${URL}</stringProp>
              <stringProp name="HTTPSampler.protocol">https</stringProp>
              <stringProp name="HTTPSampler.path">/property-services/property/_update</stringProp>
              <stringProp name="HTTPSampler.method">POST</stringProp>
              <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
              <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
              <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
                <collectionProp name="Arguments.arguments">
                  <elementProp name="" elementType="HTTPArgument">
                    <boolProp name="HTTPArgument.always_encode">false</boolProp>
                    <stringProp name="Argument.value">{&#xd;
    &quot;Property&quot;: ${modifiedPropertyPayload},&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;Rainmaker&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;,&#xd;
        &quot;userInfo&quot;: ${__P(ReqInfo)},&#xd;
        &quot;msgId&quot;: &quot;1757668283442|en_IN&quot;,&#xd;
        &quot;plainAccessRequest&quot;: {}&#xd;
    }&#xd;
}</stringProp>
                    <stringProp name="Argument.metadata">=</stringProp>
                  </elementProp>
                </collectionProp>
              </elementProp>
            </HTTPSamplerProxy>
            <hashTree>
              <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
                <collectionProp name="HeaderManager.headers">
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Accept</stringProp>
                    <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Content-Type</stringProp>
                    <stringProp name="Header.value">application/json;charset=utf-8</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Referer</stringProp>
                    <stringProp name="Header.value">https://${URL}/digit-ui/employee/pt/response</stringProp>
                  </elementProp>
                  <elementProp name="" elementType="Header">
                    <stringProp name="Header.name">Origin</stringProp>
                    <stringProp name="Header.value">https://${URL}</stringProp>
                  </elementProp>
                </collectionProp>
              </HeaderManager>
              <hashTree/>
              <JSONPostProcessor guiclass="JSONPostProcessorGui" testclass="JSONPostProcessor" testname="propertyId" enabled="true">
                <stringProp name="JSONPostProcessor.referenceNames">propertyId</stringProp>
                <stringProp name="JSONPostProcessor.jsonPathExprs">$.Properties[0].propertyId</stringProp>
                <stringProp name="JSONPostProcessor.match_numbers">1</stringProp>
                <stringProp name="JSONPostProcessor.defaultValues">propertyId NOT FOUND</stringProp>
              </JSONPostProcessor>
              <hashTree/>
              <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="JSR223 PreProcessor" enabled="true">
                <stringProp name="cacheKey">true</stringProp>
                <stringProp name="filename"></stringProp>
                <stringProp name="parameters"></stringProp>
                <stringProp name="script">import groovy.json.JsonSlurper
import groovy.json.JsonOutput

// 1. Read the saved JSON string from JMeter variable
def originalJson = vars.get(&quot;PropertyDetail&quot;)

// 2. Parse JSON into an object so we can work with it
def parser = new JsonSlurper()
def obj = parser.parseText(originalJson)

// 3. Update only the workflow part
obj.workflow = [
    action: &quot;APPROVE&quot;,                // new action
    comment: &quot;Verified in JMeter&quot;,    // optional comment
    businessService: &quot;PT.CREATE&quot;,
    businessId: &quot;${acknowldgementNumber}&quot;,
    moduleName: &quot;PT&quot;,
    assignes: []                      // keep empty or put values
]

// 4. Convert back into JSON string
def newJson = JsonOutput.toJson(obj)

// 5. Save into a new JMeter variable
vars.put(&quot;modifiedPropertyPayload&quot;, newJson)
</stringProp>
                <stringProp name="scriptLanguage">groovy</stringProp>
              </JSR223PreProcessor>
              <hashTree/>
            </hashTree>
          </hashTree>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group: Billing Service" enabled="false">
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller">
          <stringProp name="LoopController.loops">1</stringProp>
          <boolProp name="LoopController.continue_forever">false</boolProp>
        </elementProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="PT Variables">
          <collectionProp name="Arguments.arguments">
            <elementProp name="businessService" elementType="Argument">
              <stringProp name="Argument.name">businessService</stringProp>
              <stringProp name="Argument.value">PT</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <ResultCollector guiclass="StatVisualizer" testclass="ResultCollector" testname="Aggregate Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="TableVisualizer" testclass="ResultCollector" testname="View Results in Table" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/billing-service/taxheads/_search" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/billing-service/taxheads/_search?tenantId=${state_tenant}.${city_tenant}&amp;businessService=${businessService}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;string&quot;,&#xd;
        &quot;ver&quot;: &quot;string&quot;,&#xd;
        &quot;ts&quot;: 0,&#xd;
        &quot;action&quot;: &quot;string&quot;,&#xd;
        &quot;did&quot;: &quot;string&quot;,&#xd;
        &quot;key&quot;: &quot;string&quot;,&#xd;
        &quot;msgId&quot;: &quot;string&quot;,&#xd;
        &quot;requesterId&quot;: &quot;string&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/billing-service/taxperiods/_search" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/billing-service/taxperiods/_search?tenantId=${state_tenant}.${city_tenant}&amp;service=${businessService}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;string&quot;,&#xd;
        &quot;ver&quot;: &quot;string&quot;,&#xd;
        &quot;ts&quot;: 0,&#xd;
        &quot;action&quot;: &quot;string&quot;,&#xd;
        &quot;did&quot;: &quot;string&quot;,&#xd;
        &quot;key&quot;: &quot;string&quot;,&#xd;
        &quot;msgId&quot;: &quot;string&quot;,&#xd;
        &quot;requesterId&quot;: &quot;string&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/billing-service/businessservices/_search" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/billing-service/businessservices/_search?tenantId=${state_tenant}.${city_tenant}&amp;businessService=${businessService}</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;string&quot;,&#xd;
        &quot;ver&quot;: &quot;string&quot;,&#xd;
        &quot;ts&quot;: 0,&#xd;
        &quot;action&quot;: &quot;string&quot;,&#xd;
        &quot;did&quot;: &quot;string&quot;,&#xd;
        &quot;key&quot;: &quot;string&quot;,&#xd;
        &quot;msgId&quot;: &quot;string&quot;,&#xd;
        &quot;requesterId&quot;: &quot;string&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="/billing-service/demand/_create" enabled="true">
          <stringProp name="HTTPSampler.domain">${URL}</stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.path">/billing-service/demand/_create</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
    &quot;RequestInfo&quot;: {&#xd;
        &quot;apiId&quot;: &quot;string&quot;,&#xd;
        &quot;ver&quot;: &quot;string&quot;,&#xd;
        &quot;ts&quot;: 0,&#xd;
        &quot;action&quot;: &quot;string&quot;,&#xd;
        &quot;did&quot;: &quot;string&quot;,&#xd;
        &quot;key&quot;: &quot;string&quot;,&#xd;
        &quot;msgId&quot;: &quot;string&quot;,&#xd;
        &quot;requesterId&quot;: &quot;string&quot;,&#xd;
        &quot;authToken&quot;: &quot;${__P(authToken)}&quot;&#xd;
    }&#xd;
}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">accept</stringProp>
                <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
              </elementProp>
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">content-type</stringProp>
                <stringProp name="Header.value">application/json;charset=UTF-8</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
